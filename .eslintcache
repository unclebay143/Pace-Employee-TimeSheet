[{"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Sidebar.js":"1","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\eShedule\\Eshedule.js":"2","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\Timer.js":"3","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\Validation\\Schema.js":"4","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\About.js":"5","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js":"6"},{"size":8785,"mtime":1610926558158,"results":"7","hashOfConfig":"8"},{"size":4403,"mtime":1610927400148,"results":"9","hashOfConfig":"8"},{"size":8546,"mtime":1610927521567,"results":"10","hashOfConfig":"8"},{"size":2889,"mtime":1610960454961,"results":"11","hashOfConfig":"8"},{"size":4375,"mtime":1610964503515,"results":"12","hashOfConfig":"8"},{"size":12816,"mtime":1610966521329,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lqflwm",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Sidebar.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\eShedule\\Eshedule.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\Timer.js",["27","28"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\Validation\\Schema.js",["29"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\About.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js",["30"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { updateTaskStatus } from '../../../actions/task/taskAction';\r\nimport { deleteAssignedTask } from '../../../actions/task/assignedTaskAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCompanyEmployees } from '../../../actions/employee/employeeAction';\r\n\r\n// import { connect } from 'react-redux';\r\n\r\nimport Button from '../../layouts/Button';\r\n\r\nimport unclebay from '../../pages/pages-images/ayodele_samuel_adebayo.jpg';\r\nimport attachment from '../../pages/pages-images/v.jpg';\r\nimport { FETCH_TASK_DETAILS_API_URL } from '../../../services/root-endpoints';\r\nimport { authHeader, currentUserFromLocalStorage } from '../../../services/auth-header';\r\nimport axios from 'axios';\r\nimport { formatDate } from '../../../_helper/dateFormatter';\r\nimport Loader from '../../loader/Loader';\r\nimport { currentUserRoleID } from \"../../../services/auth-header\";\r\nimport { taskStatusUpdated } from '../../../toaster';\r\n\r\n\r\nconst TaskDetails = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const [taskDetails, setTaskDetails] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { employees } = useSelector(state => state.employees)\r\n  const [assignedUser, setAssignedUser] = useState({});\r\n  const [taskStatusName, setTaskStatusName] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch company employees\r\n      dispatch(getCompanyEmployees())               \r\n  },[dispatch]);\r\n    \r\n  useEffect(() => {\r\n      // Fetch the task details from the server\r\n      const fetchTaskDetails = async() =>{\r\n        const response = await axios.get(FETCH_TASK_DETAILS_API_URL + params.id, { headers: authHeader })\r\n        setTaskDetails(response.data.data[0])\r\n        setIsLoading(false)\r\n        if(currentUserRoleID !== 5 ){\r\n          const findAssignedEmployee = employees.filter((employee)=>employee.staffID === response.data.data[0].assignedID)\r\n          setAssignedUser(findAssignedEmployee[0])\r\n          setIsLoading(false)\r\n        }            \r\n      }\r\n      // Function call\r\n      fetchTaskDetails()\r\n  },[params.id, employees]);\r\n\r\n  useEffect(() => {\r\n    switch (taskDetails.taskStatus) {\r\n      case 1:\r\n        setTaskStatusName(' Accept')\r\n        break;\r\n      case 2:\r\n        setTaskStatusName(' Submit')\r\n        break;\r\n      case 3:\r\n        setTaskStatusName(' Completed')\r\n        break;\r\n      case 4:\r\n        setTaskStatusName(' Overdue')\r\n        break;\r\n      default:\r\n        setTaskStatusName('Error');\r\n        break;\r\n    }\r\n  }, [taskDetails.taskStatus])\r\n\r\n  const handleTaskStatus = () =>{\r\n    dispatch(updateTaskStatus(updateTaskDetails))\r\n    .then((response)=>{\r\n      taskStatusUpdated()\r\n      window.location.reload()\r\n\r\n      console.log(response)\r\n    })\r\n\r\n  }\r\n  \r\n  const updateTaskDetails = {\r\n    assignedID: taskDetails.assignedID,\r\n    staffID: taskDetails.staffID,\r\n    taskID: taskDetails.taskID,\r\n    // check if the status is already upto 5\r\n    taskStatus: taskDetails.taskStatus <= 2 ? taskDetails.taskStatus + 1 : taskDetails.taskStatus\r\n  }\r\n\r\n\r\n  // if(assignedUser === undefined){ // If the assignedUser details is not fetched keep loading\r\n    if(isLoading){ // If the assignedUser details is not fetched keep loading\r\n    return(\r\n        <>\r\n          <Loader />\r\n        </>\r\n      )\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <section className=\"py-0\">\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-lg-12 mb-1 compose-task task-util\">\r\n                <div className=\"card\">\r\n                  <div className=\"py-3\">\r\n                  <header className=\"card-header wht-bg\">\r\n                    <h4 className=\"d-flex justify-content-between task-page-lead\">\r\n                      {/* { taskDetails.taskName } */}\r\n                      {/* View Task */}\r\n                      \r\n                    </h4>\r\n                  </header>\r\n                  </div>\r\n                  <div className=\"card-body py-1\">\r\n                    <div className= \"pt-3\">\r\n                      <div className=\"mail-header row\">\r\n                        <div className=\"col-md-8\">\r\n                          <h4 className=\"float-left task-title\">{taskDetails.taskName}</h4>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <div className=\"compose-btn-wrapper\">\r\n                            {\r\n                              currentUserRoleID === 5 ? (\r\n                                <>\r\n                                  <Button \r\n                                    type=\"submit\"\r\n                                    label={taskStatusName}\r\n                                    icon=\"fa fa-check\"\r\n                                    className=\"btn btn-theme btn-sm\"\r\n                                    onClick={(()=>handleTaskStatus(updateTaskDetails))}\r\n                                    />\r\n                                  {/* <Button \r\n                                    type=\"submit\"\r\n                                    label=\" Request\"\r\n                                    className=\"btn btn-sm mx-2 special\"\r\n                                    />                                      */}\r\n                                  <Button \r\n                                    type=\"submit\"\r\n                                    label=\" Delete\"\r\n                                    icon=\"fa fa-trash-alt\"\r\n                                    className=\"btn btn-sm special pace-bg-accent mx-2\"\r\n                                    onClick={(()=>dispatch(deleteAssignedTask(taskDetails.staffID)))}\r\n                                    // onClick={(()=>dispatch(deleteTask(taskDetails.taskID)))}\r\n                                  />          \r\n                                </>\r\n                              )\r\n                              :\r\n                              (\r\n                                <>\r\n                                  <Button \r\n                                    type=\"submit\"\r\n                                    label=\" Delete\"\r\n                                    icon=\"fa fa-trash-alt\"\r\n                                    className=\"btn btn-sm special pace-bg-accent\"\r\n                                    onClick={(()=>dispatch(deleteAssignedTask(taskDetails.staffID)))}\r\n                                    // onClick={(()=>dispatch(deleteTask(taskDetails.taskID)))}\r\n                                  />          \r\n                                </>\r\n                              )\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <hr />\r\n                        <div className=\"mail-sender\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                              {\r\n                                currentUserRoleID === 5 ? (\r\n                                  <>\r\n                                    <img src={unclebay} alt=\"sender profile\" className=\"sender-image mr-2\"/>\r\n                                    <strong>Admin</strong>\r\n                                    <span className=\"\"> </span> to\r\n                                    <strong> {currentUserFromLocalStorage.email} </strong>\r\n\r\n                                  </>\r\n                                )\r\n                                :\r\n                                (\r\n                                  <>\r\n                                    <img src={unclebay} alt=\"sender profile\" className=\"sender-image mr-2\"/>\r\n                                    <strong>Me</strong>\r\n                                    <span className=\"\"> </span> to\r\n                                    {/* <strong> {assignedUser.email} </strong> */}\r\n                                  </>\r\n                                )\r\n                              }\r\n                              \r\n                            </div>\r\n                            {/* due date */}\r\n                            <div className=\"col-md-4\">\r\n                              <p className=\"date float-right mr-2\"> {formatDate(taskDetails.dateCreated)} </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      <hr />\r\n                      {/* TASK DESCRIPTION */}\r\n                      <div className=\"view-mail\">\r\n                       <p> {taskDetails.taskDescription} </p>\r\n                      </div>\r\n                      <div className=\"attachment-mail d-none\">\r\n                        <p>\r\n                          <span><i className=\"fa fa-paperclip\" /> 2 attachments — </span>\r\n                          <NavLink exact to=\"/dashboard/task/\">\r\n                            Download all attachments\r\n                          </NavLink> \r\n                          <span className=\"mx-1\"> | </span> \r\n                          <NavLink exact to=\"/dashboard/task/\">\r\n                            View all images\r\n                          </NavLink>\r\n                          {/* <a href=\"#\">Download all attachments</a> |\r\n                          <a href=\"#\">View all images</a> */}\r\n                        </p>\r\n                        <ul className=\"attachment-wrapper d-flex\">\r\n                          <li>\r\n                            <NavLink exact to=\"/dashboard/task/\" className=\"attachment-thumb mr-5\">\r\n                              <img src={attachment} alt=\"attachment\"/>\r\n                            </NavLink>\r\n                            <div className=\"links\">\r\n                              <NavLink exact to=\"/dashboard/task/\">\r\n                                View\r\n                              </NavLink>\r\n                              <span> - </span> \r\n                              <NavLink exact to=\"/dashboard/task/\">\r\n                                Download\r\n                              </NavLink>\r\n                            </div>\r\n                          </li>\r\n                          <li>\r\n                            <NavLink exact to=\"/dashboard/task/\" className=\"attachment-thumb\">\r\n                              <img src={attachment} alt=\"attachment\"/>\r\n                            </NavLink>\r\n                            <div className=\"links\">\r\n                              <NavLink exact to=\"/dashboard/task/\">\r\n                                View\r\n                              </NavLink>\r\n                              <span> - </span> \r\n                              <NavLink exact to=\"/dashboard/task/\">\r\n                                Download\r\n                              </NavLink>\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* <div className=\"form-group d-flex justify-content-start\"> */}\r\n                        {/* <div className=\"compose-btn float-left my-4\">\r\n                          {\r\n                            taskDetails.taskStatus === 2 ? (\r\n                              <>\r\n\r\n                                <Button \r\n                                  type=\"button\"\r\n                                  icon=\"fa fa-check\"\r\n                                  label=\"Completed\"\r\n                                  className=\"btn btn-theme btn-sm\"\r\n                                  onClick={(()=>dispatch(updateTaskStatus(updateTaskDetails)))}\r\n                                />                                   \r\n\r\n                              </>\r\n                            )\r\n                            :\r\n                            \"\"\r\n                          } */}\r\n                          {/* <Button \r\n                            type=\"submit\"\r\n                            label=\" Request\"\r\n                            className=\"btn btn-sm special mx-2\"\r\n                          />    \r\n                          <Button \r\n                            type=\"submit\"\r\n                            label=\" Delete\"\r\n                            icon=\"fa fa-trash-alt\"\r\n                            className=\"btn btn-sm special pace-bg-accent\"\r\n                            onClick={(()=>(deleteAssignedTask(taskDetails.staffID)))}\r\n                            onClick={(()=>(deleteTask(taskDetails.staffID)))}\r\n                          /> */}\r\n                        {/* </div> */}\r\n                      {/* </div>   */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </section>           \r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TaskDetails;",{"ruleId":"31","severity":1,"message":"32","line":12,"column":10,"nodeType":"33","messageId":"34","endLine":12,"endColumn":31},{"ruleId":"31","severity":1,"message":"35","line":20,"column":34,"nodeType":"33","messageId":"34","endLine":20,"endColumn":54},{"ruleId":"31","severity":1,"message":"36","line":8,"column":7,"nodeType":"33","messageId":"34","endLine":8,"endColumn":18},{"ruleId":"31","severity":1,"message":"37","line":30,"column":10,"nodeType":"33","messageId":"34","endLine":30,"endColumn":22},"no-unused-vars","'initializeNewDayTimer' is defined but never used.","Identifier","unusedVar","'setTimerSessionExist' is assigned a value but never used.","'phoneRegExp' is assigned a value but never used.","'assignedUser' is assigned a value but never used."]