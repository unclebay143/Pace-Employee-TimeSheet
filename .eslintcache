[{"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\index.js":"1","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\Store.js":"2","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Thanks.js":"3","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Confirmation.js":"4","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\NewStaffPassword.js":"5","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\ForgotPassword.js":"6","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\SibarToggle.js":"7","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\HomeButton.js":"8","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\rough\\MappingForm.js":"9","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\FormInput.js":"10","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Navbar.js":"11","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Footer.js":"12","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\auth-header.js":"13","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\BillingReport.js":"14","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\user\\UpdateProfile.js":"15","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\department\\ManageDepartment.js":"16","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\calendar\\Calendar.js":"17","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\calendar\\ManageCalendar.js":"18","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\UpdateEmployeeProfile.js":"19","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\toaster\\index.js":"20","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\ShowDashboard.js":"21","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\IndexArea.js":"22","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoRows.js":"23","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoForm.js":"24","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\NotificationCards.js":"25","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AcceptedTasks.js":"26","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\PendingTasks.js":"27","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\auth.service.js":"28","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\timer\\timerAction.js":"29","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\user.service.js":"30","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\department\\NewDepartmentForm.js":"31","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\company\\calendar\\calendarAction.js":"32","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EscheduleCard.js":"33","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\todo.service.js":"34","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\eSchedule\\eScheduleReducer.js":"35","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\company\\calendar\\calendarReducer.js":"36","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Button.js":"37","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js":"38","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AllTasks.js":"39","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\timer\\TimerReportReducer.js":"40","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\authentication\\authReducer.js":"41","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\company\\department\\departmentReducer.js":"42","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\company\\payment\\planPurchase.service.js":"43","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\task.service.js":"44","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Login.js":"45","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\App.js":"46","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\ContactUs.js":"47","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Signup.js":"48","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\rough\\Test.js":"49","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Footer.js":"50","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Button.js":"51","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Home.js":"52","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\About.js":"53","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Index.js":"54","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Task.js":"55","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\PersonalTimeSheet.js":"56","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TaskReport.js":"57","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\user\\Profile.js":"58","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\user\\userAction.js":"59","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TimerReport.js":"60","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\Settings\\Settings.js":"61","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\root-endpoints.js":"62","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Features.js":"63","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\MostActiveEmployee.js":"64","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\Completed.js":"65","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\TaskInboxSample.js":"66","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\eschedule\\eScheduleAction.js":"67","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\_helper\\dateFormatter.js":"68","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\company\\department\\departmentAction.js":"69","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\company\\company-service.js":"70","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\company\\employee\\employeeReducer.js":"71","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\task\\acceptedTaskReducer.js":"72","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Tooltip.js":"73","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Text.js":"74","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\TodoCard.js":"75","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\company\\department-service.js":"76","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\SampleCompose.js":"77","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\todo\\todoAction.js":"78","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\settings.js":"79","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\DraftTask.js":"80","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Dashboard.js":"81","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Navbar.js":"82","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\Validation\\Schema.js":"83","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\Todo.js":"84","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\eSchedule\\Eschedule.js":"85","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Sidebar.js":"86","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\EmployeeList.js":"87","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\index.js":"88","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\Sample.js":"89","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\Timer.js":"90","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\timer\\timerReducer.js":"91","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\pages-js\\TypeWriter.js":"92","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\task\\taskAction.js":"93","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\timer\\timer.Service.js":"94"},{"size":3773,"mtime":1610917376520,"results":"95","hashOfConfig":"96"},{"size":385,"mtime":1609337773316,"results":"97","hashOfConfig":"96"},{"size":2196,"mtime":1610534276891,"results":"98","hashOfConfig":"96"},{"size":1256,"mtime":1610479521514,"results":"99","hashOfConfig":"96"},{"size":3038,"mtime":1610920000273,"results":"100","hashOfConfig":"96"},{"size":3960,"mtime":1608033584338,"results":"101","hashOfConfig":"96"},{"size":326,"mtime":1608033584722,"results":"102","hashOfConfig":"96"},{"size":255,"mtime":1609945594975,"results":"103","hashOfConfig":"96"},{"size":311,"mtime":1609201318719,"results":"104","hashOfConfig":"96"},{"size":2712,"mtime":1610805209406,"results":"105","hashOfConfig":"96"},{"size":9597,"mtime":1611186438804,"results":"106","hashOfConfig":"96"},{"size":715,"mtime":1607600392231,"results":"107","hashOfConfig":"96"},{"size":1651,"mtime":1611186438919,"results":"108","hashOfConfig":"96"},{"size":1880,"mtime":1610132857604,"results":"109","hashOfConfig":"96"},{"size":18310,"mtime":1611186438573,"results":"110","hashOfConfig":"96"},{"size":6111,"mtime":1610830643355,"results":"111","hashOfConfig":"96"},{"size":2397,"mtime":1610902473302,"results":"112","hashOfConfig":"96"},{"size":14881,"mtime":1610910938891,"results":"113","hashOfConfig":"96"},{"size":29165,"mtime":1610825150437,"results":"114","hashOfConfig":"96"},{"size":2479,"mtime":1610908621222,"results":"115","hashOfConfig":"96"},{"size":5976,"mtime":1610534276887,"results":"116","hashOfConfig":"96"},{"size":2178,"mtime":1610825150456,"results":"117","hashOfConfig":"96"},{"size":4701,"mtime":1611186438783,"results":"118","hashOfConfig":"96"},{"size":4909,"mtime":1611186438765,"results":"119","hashOfConfig":"96"},{"size":479,"mtime":1610825150598,"results":"120","hashOfConfig":"96"},{"size":4309,"mtime":1611260820517,"results":"121","hashOfConfig":"96"},{"size":4291,"mtime":1611260820520,"results":"122","hashOfConfig":"96"},{"size":4773,"mtime":1611186438921,"results":"123","hashOfConfig":"96"},{"size":1560,"mtime":1611186438382,"results":"124","hashOfConfig":"96"},{"size":1906,"mtime":1611186438921,"results":"125","hashOfConfig":"96"},{"size":3772,"mtime":1610534276864,"results":"126","hashOfConfig":"96"},{"size":1853,"mtime":1611186438320,"results":"127","hashOfConfig":"96"},{"size":969,"mtime":1608033584895,"results":"128","hashOfConfig":"96"},{"size":1235,"mtime":1610890990329,"results":"129","hashOfConfig":"96"},{"size":1252,"mtime":1611186438846,"results":"130","hashOfConfig":"96"},{"size":1217,"mtime":1610825150623,"results":"131","hashOfConfig":"96"},{"size":1166,"mtime":1610534276895,"results":"132","hashOfConfig":"96"},{"size":13002,"mtime":1611186441063,"results":"133","hashOfConfig":"96"},{"size":4803,"mtime":1611260820518,"results":"134","hashOfConfig":"96"},{"size":1024,"mtime":1609337775024,"results":"135","hashOfConfig":"96"},{"size":1731,"mtime":1611186438837,"results":"136","hashOfConfig":"96"},{"size":1825,"mtime":1610534276949,"results":"137","hashOfConfig":"96"},{"size":934,"mtime":1611186438921,"results":"138","hashOfConfig":"96"},{"size":1700,"mtime":1611260820527,"results":"139","hashOfConfig":"96"},{"size":7602,"mtime":1612017387021,"results":"140","hashOfConfig":"96"},{"size":944,"mtime":1610825150402,"results":"141","hashOfConfig":"96"},{"size":5522,"mtime":1610534276883,"results":"142","hashOfConfig":"96"},{"size":12491,"mtime":1610534276890,"results":"143","hashOfConfig":"96"},{"size":556,"mtime":1609337775082,"results":"144","hashOfConfig":"96"},{"size":4735,"mtime":1610534276879,"results":"145","hashOfConfig":"96"},{"size":325,"mtime":1607600391965,"results":"146","hashOfConfig":"96"},{"size":484,"mtime":1610704296852,"results":"147","hashOfConfig":"96"},{"size":4794,"mtime":1611260820514,"results":"148","hashOfConfig":"96"},{"size":1269,"mtime":1610534276919,"results":"149","hashOfConfig":"96"},{"size":2661,"mtime":1611260820515,"results":"150","hashOfConfig":"96"},{"size":2070,"mtime":1611186438719,"results":"151","hashOfConfig":"96"},{"size":5191,"mtime":1611260820521,"results":"152","hashOfConfig":"96"},{"size":7252,"mtime":1611186438571,"results":"153","hashOfConfig":"96"},{"size":1825,"mtime":1610825150401,"results":"154","hashOfConfig":"96"},{"size":1908,"mtime":1611186438680,"results":"155","hashOfConfig":"96"},{"size":11966,"mtime":1611186438437,"results":"156","hashOfConfig":"96"},{"size":4818,"mtime":1611260820526,"results":"157","hashOfConfig":"96"},{"size":7887,"mtime":1610534276884,"results":"158","hashOfConfig":"96"},{"size":2095,"mtime":1610825150596,"results":"159","hashOfConfig":"96"},{"size":4313,"mtime":1611186438662,"results":"160","hashOfConfig":"96"},{"size":18027,"mtime":1609337774484,"results":"161","hashOfConfig":"96"},{"size":1814,"mtime":1611186438336,"results":"162","hashOfConfig":"96"},{"size":338,"mtime":1610534276841,"results":"163","hashOfConfig":"96"},{"size":1898,"mtime":1610534276845,"results":"164","hashOfConfig":"96"},{"size":511,"mtime":1610534276975,"results":"165","hashOfConfig":"96"},{"size":742,"mtime":1610642260650,"results":"166","hashOfConfig":"96"},{"size":890,"mtime":1611260820524,"results":"167","hashOfConfig":"96"},{"size":586,"mtime":1610534276897,"results":"168","hashOfConfig":"96"},{"size":409,"mtime":1610534276896,"results":"169","hashOfConfig":"96"},{"size":1124,"mtime":1610825150599,"results":"170","hashOfConfig":"96"},{"size":833,"mtime":1610704297048,"results":"171","hashOfConfig":"96"},{"size":3198,"mtime":1609464540954,"results":"172","hashOfConfig":"96"},{"size":2008,"mtime":1611186438411,"results":"173","hashOfConfig":"96"},{"size":397,"mtime":1610534276899,"results":"174","hashOfConfig":"96"},{"size":14864,"mtime":1610891734098,"results":"175","hashOfConfig":"96"},{"size":6187,"mtime":1611186438589,"results":"176","hashOfConfig":"96"},{"size":1885,"mtime":1610825150453,"results":"177","hashOfConfig":"96"},{"size":2892,"mtime":1611186438427,"results":"178","hashOfConfig":"96"},{"size":2222,"mtime":1610704296965,"results":"179","hashOfConfig":"96"},{"size":4478,"mtime":1611186438601,"results":"180","hashOfConfig":"96"},{"size":9089,"mtime":1611186559881,"results":"181","hashOfConfig":"96"},{"size":2454,"mtime":1611186438467,"results":"182","hashOfConfig":"96"},{"size":1275,"mtime":1611260820522,"results":"183","hashOfConfig":"96"},{"size":5517,"mtime":1609184403925,"results":"184","hashOfConfig":"96"},{"size":9227,"mtime":1611186438734,"results":"185","hashOfConfig":"96"},{"size":1056,"mtime":1611186438867,"results":"186","hashOfConfig":"96"},{"size":1695,"mtime":1609337774030,"results":"187","hashOfConfig":"96"},{"size":1569,"mtime":1611186438367,"results":"188","hashOfConfig":"96"},{"size":1176,"mtime":1611186439490,"results":"189","hashOfConfig":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"xutyyu",{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"192"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"195"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"195"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"192"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"192"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"195"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"195"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"195"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"195"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"195"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"195"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"195"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"195"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\index.js",[],["394","395"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\Store.js",[],["396","397"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Thanks.js",["398"],"// React\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Layouts\r\nimport Button from \"../../components/layouts/Button\";\r\nimport messageSent from \"../../components/pages/pages-images/message_sent.svg\";\r\n\r\nexport default function Thanks(){\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <section className=\"d-flex flex-lg-row flex-column-reverse justify-content-center align-items-center \">\r\n                        <aside className=\"col-lg-6 col-12 mt-sm-3\">\r\n                            <h2 className=\"font-weight-bold mt-5\">Thank you!</h2>\r\n                            <p>We've received your message and we'll get back to you within 24 hours.</p>\r\n\r\n                            <section className=\"mt-5\">\r\n                                <h5 className=\"pt-3 mb-4\">\r\n                                    Follow us on twitter &nbsp;\r\n                                    <i className=\"fab fa-twitter text-blue\"></i>\r\n                                </h5>\r\n                                <Link to=\"/\">\r\n                                    <Button\r\n                                        label=\" Go Home\"\r\n                                        icon=\"fa fa-arrow-left\"\r\n                                        className=\"btn pace-btn-accent\"\r\n                                    />\r\n                                </Link>\r\n                                <a href=\"https://twitter.com/tiidelab\" target=\"_blank\">\r\n                                    <Button\r\n                                        label=\" Twitter\"\r\n                                        icon=\"fab fa-twitter\"\r\n                                        className=\"btn btn-primary ml-3\"\r\n                                    />\r\n                                </a>\r\n                            </section>\r\n                        </aside>\r\n                        <aside className=\"col-lg-6 col-9 mt-5\">\r\n                            <img src={messageSent} alt=\"message sent successfully\" className=\"img-fluid mt-4\" />\r\n                        </aside>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Confirmation.js",["399"],"import { React, useEffect } from 'react';\r\nimport sendImage from '../../components/pages/pages-images/mailsent.svg';\r\nimport mailAnimation from '../../components/pages/pages-images/mailAnimation.gif';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Confirmation() {\r\n    useEffect(() => {\r\n        \r\n        return () => {\r\n            document.title = \"Mail confirmation\"\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"container d-flex justify-content-center mt-5\">\r\n                <div className=\"row confirmation-wrapper\">\r\n                    <div className=\"col-12 text-center\">\r\n                        {/* <img src={sendImage} alt=\"message sent successfully\" /> */}\r\n                        <img src={mailAnimation} alt=\"message sent successfully\" />\r\n                    </div>\r\n                    <div className=\"col-12 text-center\">\r\n                        <h2 className=\"mt-3 text-center\">Message Sent</h2>\r\n                        <p>A mail containing a link to reset your password has been sent to your registered email</p>\r\n                        <p>Return <Link to=\"/\">Home</Link></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\NewStaffPassword.js",["400"],"import React from 'react';\r\nimport oneStep from '../../components/pages/pages-images/oneStep.svg';\r\n\r\nexport default function NewStaffPassword() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <style>\r\n                    {\r\n                        `\r\n                            body{\r\n                                // background-color:#5286F3;\r\n                                font-size:14px;\r\n                                color:#fff;\r\n                            }\r\n                            .simple-login-container{\r\n                                width:400px;\r\n                                max-width:100%;\r\n                                margin:100px auto;\r\n                            }\r\n                            .simple-login-container h2{\r\n                                text-align:center;\r\n                                font-size:20px;\r\n                            }\r\n                            \r\n                            .simple-login-container .btn-login{\r\n                                // background-color:#FF5964;\r\n                                color:#fff;\r\n                            }\r\n                            a{\r\n                                color:#fff;\r\n                            }\r\n                            .one-step{\r\n                                width: 200px;\r\n                                padding: 10px;\r\n                                max-width: 100%;\r\n                                margin-left: 100px;\r\n                                // height: auto;\r\n                            }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"simple-login-container\">\r\n                    {/* <img src={oneStep} alt=\"one step closer\" className=\"img-fluid one-step\"></img> */}\r\n                    <h2 className=\"mb-5 text-dark\">You're one step closer to getting on board</h2>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12 form-group\">\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Create Password\" />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12 form-group\">\r\n                        <input type=\"password\" placeholder=\"Confirm Password\" className=\"form-control\" />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12 form-group\">\r\n                        <input type=\"submit\" className=\"btn btn-block btn-login pace-btn-primary\" placeholder=\"  \" />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        {/* <a href=\"https://1.envato.market/ydVvD\">Download Best Theme</a> */}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\ForgotPassword.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\SibarToggle.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\HomeButton.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\rough\\MappingForm.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\FormInput.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Navbar.js",["401","402","403","404","405","406","407","408","409","410"],"\r\n// React\r\nimport { React, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n// Component\r\nimport TimerContainer from '../dashboard/timer/Timer';\r\n\r\n// End session\r\nimport { logout } from '../../../actions/auth/authAction'\r\n\r\n// Toast\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { accessToken, currentUserFromLocalStorage, currentUserRoleID, currentUserStaffID } from '../../../services/auth-header';\r\nimport { syncCurrentUser } from '../../../actions/user/userAction';\r\nimport TimerRough from '../dashboard/timer/TimerRough';\r\n\r\nimport avatar from '../../../components/pages/pages-images/profileAvatar.svg'\r\nimport femaleAvatar from '../../../components/pages/pages-images/femaleAvatar.svg'\r\n\r\n\r\nconst Navbar = () =>{\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { currentUser, isLoggedIn } = useSelector(state => state.authenticationState)\r\n    const [fullName, setFullName] = useState('') // the fullName is empty before the data are fetch, to prevent seeing undefined\r\n    const [staffID, setStaffID] = useState('')\r\n    const [roleID, setRoleID] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(currentUser){\r\n            const { firstName, lastName, staffID, roleID } = currentUser || '';\r\n            setFullName(` ${ firstName === undefined ? '' : firstName } ${ lastName === undefined ? '' : lastName} `)\r\n            setStaffID(staffID)\r\n            setRoleID(roleID)\r\n            \r\n        }\r\n    },[currentUser])\r\n    \r\n    useEffect(() => {\r\n        dispatch(syncCurrentUser(staffID))    \r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        // console.log('here')\r\n        // // Check if there is a user in the local storage, don't use redux state , it get cleared before synchronizing\r\n        // if(currentUserFromLocalStorage.length > 0){\r\n        //     console.log('here2')\r\n        //     // sync the current user with the server, redux, and localstorage\r\n        //     console.log('local', currentUserFromLocalStorage)\r\n        // }else{\r\n        //     // alert('me')\r\n        // }\r\n    }, [dispatch])\r\n        \r\n\r\n    return(\r\n        <>\r\n            <ToastContainer />\r\n            <style>\r\n                {\r\n                    `\r\n                        .Toastify__toast--warning{\r\n                            background: rgb(255,112,150);\r\n                            color: #FFFFFF;\r\n                        }\r\n                    `\r\n                }\r\n            </style>\r\n            <header className=\"header\">\r\n                <nav className=\"navbar navbar-expand-lg px-4 py-2 bg-white shadow\">\r\n                    <i className=\"sidebar-toggler text-gray-500 mr-4 mr-lg-5 lead\">\r\n                        <i className=\"fas fa-align-left\"></i>\r\n                    </i>\r\n                    <Link to={`/dashboard/profile/${staffID}`} className=\"navbar-brand font-weight-bold text-uppercase text-base pace-primary-color dashboard-lead companyDisplay\">\r\n                        { fullName }\r\n                    </Link>\r\n                    <ul className=\"ml-auto d-flex align-items-center list-unstyled mb-0\">\r\n                        <TimerContainer />\r\n                        {/* <TimerRough /> */}\r\n                        <li className=\"nav-item dropdown mr-3 ml-4\">\r\n                            <a id=\"notifications\" href=\".\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" className=\"nav-link dropdown-toggle text-gray-400 px-1\">\r\n                                <i className=\"fa fa-bell pace-primary-color\"></i>\r\n                                <span className=\"notification-icon pace-bg-accent\"></span>\r\n                            </a>\r\n                            <div aria-labelledby=\"notifications\" className=\"dropdown-menu\">\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"icon icon-sm pace-bg-accent text-white\">\r\n                                            <i className=\"fab fa-twitter\"></i>\r\n                                        </div>\r\n                                        <div className=\"text ml-2\">\r\n                                            <p className=\"mb-0\">Lunch by 2pm</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"icon icon-sm bg-green text-white\">\r\n                                            <i className=\"fas fa-envelope\"></i>\r\n                                        </div>\r\n                                        <div className=\"text ml-2\">\r\n                                            <p className=\"mb-0\">Delivery in 2 days</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"icon icon-sm bg-blue text-white\">\r\n                                            <i className=\"fas fa-upload\"></i>\r\n                                        </div>\r\n                                        <div className=\"text ml-2\">\r\n                                            <p className=\"mb-0\">1 new event</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"icon icon-sm pace-bg-accent text-white\">\r\n                                            <i className=\"fab fa-twitter\"></i>\r\n                                        </div>\r\n                                        <div className=\"text ml-2\">\r\n                                            <p className=\"mb-0\">2 new tasks</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <a href=\"/\" className=\"dropdown-item text-center\">\r\n                                    <small className=\"font-weight-bold headings-font-family text-uppercase\">\r\n                                        View all notifications\r\n                                    </small>\r\n                                </a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown ml-auto\" h='7' data-tut='reactour__profileImage'>\r\n                            <a id=\"userInfo\" href=\".\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" className=\"nav-link dropdown-toggle\">\r\n                                {/* <img src={user_Image} alt={user_first_name} style={{maxWidth:\"2.5rem\"}} className=\"img-fluid rounded-circle shadow\" /> */}\r\n                                {\r\n                                    currentUserRoleID === 5 ? (\r\n                                        <>\r\n                                            <img src={femaleAvatar} alt='unclebay' style={{maxWidth:\"2.5rem\"}} className=\"img-fluid rounded-circle shadow\" />\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    (\r\n                                        <>\r\n                                            <img src={avatar} alt='unclebay' style={{maxWidth:\"2.5rem\"}} className=\"img-fluid rounded-circle shadow\" />\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </a>\r\n                            <div aria-labelledby=\"userInfo\" className=\"dropdown-menu\">\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <strong className=\"d-block text-uppercase headings-font-family companyDisplay\">\r\n                                        { fullName }\r\n                                    </strong>\r\n                                    <small id=\"role_display\">Web Developer</small>\r\n                                </a>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <Link to={`/dashboard/profile/${staffID}`} className=\"dropdown-item\">Profile</Link>\r\n                                {\r\n                                    roleID !== 5 ? '' : (\r\n                                        <a href=\"/\" className=\"dropdown-item\">Settings</a>\r\n                                    )\r\n                                }\r\n                                <div className=\"dropdown-divider\"></div><span className=\"dropdown-item\" style={{cursor: 'pointer'}} onClick={(()=>dispatch(logout()))}>Logout</span>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Footer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\auth-header.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\BillingReport.js",["411","412"],"import React from 'react';\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { useSelector } from 'react-redux';\r\nimport { TextInput } from '../../../layouts/FormInput';\r\n\r\nconst calc = 2;\r\n\r\nconst Header = [\r\n  {\r\n    dataField: 'id',\r\n    text: 'S/N'\r\n  },\r\n  {\r\n    dataField: 'firstname',\r\n    text: 'Firstname',\r\n  },\r\n  {\r\n    dataField: 'lastname',\r\n    text: 'Lastname',\r\n  },\r\n  {\r\n    dataField: 'department',\r\n    text: 'Department',\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Role',\r\n  },\r\n  {\r\n    dataField: 'workedHour',\r\n    text: 'Worked Hour',\r\n  },\r\n  {\r\n    dataField: 'workedHour',\r\n    text: 'Receivable',\r\n  },\r\n    \r\n  {\r\n  \r\n    formatter: (cellContent, row) => {\r\n      return (\r\n        <>\r\n            <tr></tr>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n\r\n];\r\n\r\n\r\n// function handleDelete(rowId){\r\n//   console.log(rowId);\r\n// };\r\n\r\n\r\nconst BillingReport = () => {\r\n    const usersDetails = useSelector(state => state.timerReport)  \r\n    // this.handleCalculate = this.handleCalculate.bind(this)\r\n    const handleCalculate = () =>{\r\n        return(\r\n            console.log(usersDetails)\r\n            // alert(usersDetails)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid py-5\">\r\n          <Table\r\n            keyField='id'\r\n            title=\"Billing Report\"\r\n            data={usersDetails}\r\n            columns={Header}\r\n            bordered= { false }\r\n            pagination = { paginationFactory() }\r\n            customInput = { true }\r\n            customInputName = \"expectedWorkHour\"\r\n            customInputPlaceHolder = \"Expected WorkHour\"\r\n            customButtonType=\"button\"\r\n            customButtonLabel=\"Calculate\"\r\n            customButtonFunction={handleCalculate()}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillingReport;","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\user\\UpdateProfile.js",["413","414","415"],"// React\r\nimport { Link } from 'react-router-dom';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Layouts\r\nimport Button from '../layouts/Button';\r\nimport { TextInput } from '../layouts/FormInput';\r\n\r\n//  Actions\r\nimport { syncCurrentUser, updateUserProfile } from '../../actions/user/userAction';\r\n\r\n// Services helper\r\nimport Loader from '../loader/Loader';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nconst UpdateProfile = () =>{\r\n    const { currentUser } = useSelector(state => state.authenticationState)\r\n    const params = useParams(); \r\n    const dispatch = useDispatch();\r\n    const [ staffID, setStaffID ] = useState('');\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    // User credentials\r\n    const [profile, setProfile] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        address: '',\r\n        userName: '',\r\n        Image: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        const staffID = params.id; // get id from urls(path)\r\n        setStaffID(staffID);\r\n\r\n        // Destructure the user information from the redux\r\n        if(currentUser){\r\n            const {\r\n                firstName,\r\n                lastName,\r\n                userName,\r\n                phoneNumber,\r\n                email,\r\n                address,\r\n                Image\r\n                \r\n            } = currentUser\r\n\r\n            // alert(JSON.stringify(currentUser))\r\n        \r\n            // Set the destructure user information into the profile state (ES6 syntax)\r\n            setProfile({\r\n                firstName : typeof firstName !== 'string' ? '' : firstName,\r\n                lastName : typeof lastName !== 'string' ? '' : lastName,\r\n                userName,\r\n                phoneNumber: typeof phoneNumber === null || undefined ? '' : phoneNumber,\r\n                email,\r\n                address : typeof address !== 'string' ? '' : address,\r\n                // userName : typeof userName !== 'string' ? '' : userName,\r\n            })\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }, [params.id, currentUser])\r\n\r\n    \r\n    \r\n    if(isLoading){\r\n        return(\r\n            <>\r\n                <Loader />\r\n            </>\r\n        )\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"container\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb pt-3\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to='/dashboard'>\r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to={`/dashboard/profile/${params.id}`}>\r\n                                Profile\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            Edit Profile\r\n                        </li>\r\n                    </ol>\r\n                </nav>\r\n                {/* /Breadcrumb */}\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                {/* <img src={profile.Image} alt=\"test ing\"></img> */}\r\n                                <Formik\r\n                                    initialValues = {profile}\r\n                                    enableReinitialize\r\n                                    // validationSchema={UpdateProfileSchema}\r\n                                      \r\n                                    onSubmit={(values, action)=>{\r\n                                        console.log(values)\r\n                                        dispatch(updateUserProfile(values, staffID, action))\r\n                                        .then((response)=>{\r\n                                            dispatch(syncCurrentUser(staffID))\r\n                                            history.push(`/dashboard/profile/${params.id}`)\r\n                                        })\r\n                                        .catch((error)=>{\r\n                                            console.log(error)\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm, setFieldValue })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre>  */}\r\n                                                <h5>EDIT PROFILE</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                            \r\n\r\n\r\n                                            {/* FIRST NAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">First Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        placeholder=\"Enter Firstname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.firstName && errors.firstName ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"firstName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* LAST NAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Last Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"lastName\"\r\n                                                        placeholder=\"Enter last Name\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.lastName && errors.lastName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"lastName\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"lastName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n\r\n                                            {/* USERNAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Username</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"userName\"\r\n                                                        placeholder=\"Enter username\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.userName && errors.userName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"userName\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"userName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* PHONE NUMBER */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Phone Number</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                <TextInput\r\n                                                            name=\"phoneNumber\"\r\n                                                            placeholder=\"Enter Phone Number\"\r\n                                                            type=\"tel\" \r\n                                                            className={`form-control ${touched.phoneNumber && errors.phoneNumber ? \"is-invalid\" : \"\"}`} \r\n                                                            id=\"phoneNumber\"\r\n                                                        />\r\n                                                        <ErrorMessage\r\n                                                            component=\"div\"\r\n                                                            name=\"phoneNumber\"\r\n                                                            className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n\r\n                                            {/* ADDRESS */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"address\"\r\n                                                        id=\"address\"\r\n                                                        type=\"text\" \r\n                                                        placeholder=\"143 work and connect\"\r\n                                                        className={`form-control ${touched.address && errors.address ? \"is-invalid\" : \"\"}`}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"address\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            \r\n                                            {/* image */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Upload Image</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"file\"\r\n                                                        id=\"file\"\r\n                                                        type=\"file\"\r\n                                                        onChange={(event) =>{\r\n                                                            setFieldValue(\"Image\", event.currentTarget.files[0]);\r\n                                                        }}\r\n                                                        className={`form-contro ${ touched.Image && errors.Image ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"Image\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            \r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile;\r\n","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\department\\ManageDepartment.js",["416"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\calendar\\Calendar.js",["417"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\calendar\\ManageCalendar.js",["418"],"import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport Button from '../../layouts/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { addNewCalendarEvent, deleteCalendarEvent, editCalendarEvent, getCalendarEvent } from '../../../actions/company/calendar/calendarAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../loader/Loader';\r\nimport { formatDate } from '../../../_helper/dateFormatter';\r\nimport { date } from 'yup';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { eventDeletedSuccessfullyLogger, eventNotDeletedLogger, eventUpdatedSuccessfullyLogger, eventnNotUpdatedLogger } from '../../../toaster';\r\n\r\n\r\nexport default function ManageCalendar() {\r\n    const { events, isFetching } = useSelector(state => state.calendar);\r\n    const [eventsState, setEventsState] = useState([]);\r\n    const [ isFetchingState, setIsFetchingState ] = useState(isFetching);\r\n    const [ editMode, setEditMode ] = useState(false);\r\n    const [ eventInEditMode, setEventInEditMode ] = useState({});\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCalendarEvent())\r\n    }, [dispatch]);\r\n    \r\n    useEffect(() => {\r\n        if(events){\r\n            setEventsState(events)\r\n            setIsFetchingState(false)\r\n        }\r\n    }, [events]);\r\n\r\n    const handleDelete = (eventID) =>{\r\n        dispatch(deleteCalendarEvent(eventID))\r\n        .then((response)=>{\r\n            eventDeletedSuccessfullyLogger()\r\n            // history.push('/dashboard/calendar')\r\n        })\r\n        .catch((error)=>{\r\n            eventNotDeletedLogger()\r\n        })\r\n    }\r\n\r\n    const handleEdit = (eventID, title, end) =>{\r\n        setEventInEditMode({\r\n            eventName: title,\r\n            eventDateAndTime: end,\r\n            eventID,\r\n        })\r\n        setEditMode(true)\r\n        \r\n    }\r\n\r\n    if(isFetchingState){\r\n        return(\r\n            <Loader />\r\n        )\r\n    }\r\n\r\n   \r\n    return (\r\n        <>\r\n\r\n            <style>\r\n                {\r\n                    `\r\n                    .rbc-calendar {\r\n                        min-height: 500px ;\r\n                        }\r\n                    `\r\n                }\r\n            </style>\r\n            <div className=\"py-3\">\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to='/dashboard/calendar'>\r\n                                Calendar\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            Manage Calendar\r\n                        </li>\r\n                        </ol>\r\n                    </nav>\r\n                \r\n                {/* /Breadcrumb */}\r\n            <div className=\"\">\r\n                <section className=\"\">\r\n                    <div className=\"mb-3\">\r\n                            {\r\n                                editMode ?\r\n                                (\r\n                                    \r\n                                    //  EDIT EVENT MODE\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Formik \r\n                                            enableReinitialize\r\n                                            initialValues={eventInEditMode}\r\n                                            onSubmit={((values, action)=>{\r\n                                                dispatch(editCalendarEvent(values))\r\n                                                .then((response)=>{\r\n                                                    action.setSubmitting(false)\r\n                                                    eventUpdatedSuccessfullyLogger()\r\n                                                    history.push('/dashboard/calendar')\r\n                                                })\r\n                                                .catch((error)=>{\r\n                                                    action.setSubmitting(false)\r\n                                                    eventnNotUpdatedLogger()\r\n                                                })\r\n                                            })}\r\n                                        >\r\n                                        {({errors, touched, values, isSubmitting})=>(\r\n                                            <Form className=\"form-inline\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventName\"\r\n                                                        type=\"eventName\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventName && errors.eventName ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventName\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"eventName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventDateAndTime\"\r\n                                                        type=\"datetime-local\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventDateAndTime && errors.eventDateAndTime ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventDateAndTime\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <Button \r\n                                                        type=\"submit\"\r\n                                                        label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating Event</span>) : \"Update Event\"}\r\n                                                        className=\"btn btn-sm btn-info ml-2\"\r\n                                                    />\r\n                                                </div>\r\n                                                \r\n                                                <div className=\"input-group mb-2 mr-sm ml-lg- pl-lg-\" style={{marginLeft: '280px'}}>\r\n                                                    <Button \r\n                                                        icon=\"fa fa-back-arrow\"\r\n                                                        type=\"button\"\r\n                                                        label=\"New Event\"\r\n                                                        className=\"btn btn-sm btn-info ml-2\"\r\n                                                        onClick={(()=>setEditMode(false))}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form>\r\n                                        )}\r\n                                        </Formik>\r\n                                    </div>\r\n                            )\r\n                            :\r\n                            (\r\n\r\n                                // ADD EVENT MODE\r\n                                // <div className=\"mb-3\">\r\n                                    <Formik \r\n                                        enableReinitialize\r\n                                        initialValues={{\r\n                                            eventName: '',\r\n                                            eventDateAndTime: ''\r\n                                        }}\r\n                                        onSubmit={((values, action)=>{\r\n                                            dispatch(addNewCalendarEvent(values, action))\r\n                                            .then((response)=>{\r\n                                                history.push('/dashboard/calendar')\r\n                                            })\r\n                                        })}\r\n                                        >\r\n                                        {({errors, touched, values, isSubmitting})=>(\r\n                                            <Form className=\"form-inline\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventName\"\r\n                                                        type=\"eventName\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventName && errors.eventName ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventName\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"eventName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventDateAndTime\"\r\n                                                        type=\"datetime-local\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventDateAndTime && errors.eventDateAndTime ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventDateAndTime\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                        />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <Button \r\n                                                        type=\"submit\"\r\n                                                        label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Creating Event</span>) : \"Create Event\"}\r\n                                                        className=\"btn btn-sm btn-info ml-2\"\r\n                                                        />\r\n                                                </div>\r\n                        \r\n                                            </Form>\r\n                                        )}\r\n                                    </Formik>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    <div col=\"col-9\">\r\n                        <section>\r\n                            <ul className=\"list-group\">\r\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center h5\">\r\n                                <span>Event Name</span>\r\n                                {/* <span className=\"mr-5 pr-5\">Event Name</span> */}\r\n                            </li>\r\n\r\n                                {\r\n                                    eventsState.map(({title, end, eventID}, index)=>{\r\n                                        return(\r\n                                            <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index}>\r\n                                                <span>\r\n                                                {title}\r\n                                                </span>\r\n                                                <section>\r\n                                                    <span className=\"text-center mr-5 pr-5\">\r\n                                                        {formatDate(end)}\r\n                                                    </span>\r\n                                                    <span className=\"   \">\r\n                                                        <button className=\"btn text-white badge badge-primary badge-pill mr-2\" onClick={(()=>handleEdit(eventID, title, end))}>Edit</button>\r\n                                                        <button className=\"btn text-white badge badge-red badge-pill\" onClick={(()=>handleDelete(eventID))}>Delete</button>\r\n                                                    </span>\r\n                                                </section>\r\n                                            </li>\r\n                                        )\r\n\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </section>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\UpdateEmployeeProfile.js",["419","420","421","422","423","424"],"// React\r\nimport { ErrorMessage, Form, Formik,Field } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Button from '../../layouts/Button';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCompanyEmployees, updateEmployeeBillingAndWorkHour } from '../../../actions/employee/employeeAction';\r\nimport { getDepartment } from '../../../actions/company/department/departmentAction';\r\nimport Loader from '../../loader/Loader';\r\nimport { profileUpdateCompletedLogger, profileUpdateFailLogger } from '../../../toaster';\r\n\r\n\r\nconst employeeDetailsDropDown = {\r\n    employeeRole: [\r\n        {\r\n            roleName: 'Super-Admin',\r\n            roleID: 1\r\n        },\r\n        {\r\n            roleName: 'Co-Admin',\r\n            roleID: 3\r\n        },\r\n        {\r\n            roleName: 'Internal-Admin',\r\n            roleID: 4\r\n        },\r\n        {\r\n            roleName: 'Employee',\r\n            roleID: 5\r\n        }\r\n\r\n    ],\r\n}\r\nconst availableRole = employeeDetailsDropDown.employeeRole.map(({roleName, roleID}, index)=><option value={roleID} key={index}>{roleName}</option>);\r\n\r\nconst UpdateEmployeeProfile = () =>{\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    // const [staffID, setStaffID] = useState('');\r\n\r\n    const { employees, isFetching } = useSelector(state => state.employees);\r\n    const { departments } = useSelector(state => state.departments)\r\n    const dispatch = useDispatch();\r\n    const [employeeProfile, setEmployeeProfile] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        address: '',\r\n        userName: '',\r\n    })\r\n    \r\n    \r\n    const companyDepartmentDropDown = departments.map(({departmentName, departmentID}, index)=><option value={departmentID} key={index}>{departmentName}</option>)\r\n    useEffect(() => {\r\n        // Fetch company employess\r\n        dispatch(getCompanyEmployees())\r\n\r\n        // Fetch company department\r\n        dispatch(getDepartment())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        const getEmployeeProfile = employees.filter((employee)=>employee.staffID === parseInt(params.id))\r\n        if(getEmployeeProfile.length > 0){\r\n                setEmployeeProfile(getEmployeeProfile[0])\r\n                const {\r\n                    // firstName,\r\n                    // lastName,\r\n                    // phoneNumber,\r\n                    // email,\r\n                    // address,\r\n                    // userName,\r\n                    billRateCharge,\r\n                    expectedWorkHours,\r\n                    // staffRole,\r\n                    // roleID,\r\n                    // departmentID\r\n                } = getEmployeeProfile[0]\r\n            \r\n                // Set the destructure user information into the profile state (ES6 syntax)\r\n                setEmployeeProfile({\r\n                    // firstName,\r\n                    // lastName,\r\n                    // phoneNumber,\r\n                    // email,\r\n                    // address,\r\n                    // userName,\r\n                    billRateCharge,\r\n                    expectedWorkHours,\r\n                    // staffRole,\r\n                    // roleID,\r\n                    // departmentID\r\n                })\r\n            }else{\r\n                \r\n            }\r\n        }, [employees, params.id])\r\n        if(employeeProfile === undefined){\r\n            return(\r\n                <>\r\n                    <Loader  />\r\n                </>\r\n            )\r\n        }\r\n    return ( \r\n        <>\r\n            <div className=\"container\">\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/employee-list' className=\"text-grey\">\r\n                                        Employee List\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to={`/dashboard/employee/profile/${params.id}`} className=\"text-grey\">\r\n                                        Profile\r\n                                </Link>\r\n                            </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Profile</li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues = {employeeProfile}\r\n                                    enableReinitialize\r\n                                    // validationSchema={UpdateEmployeeProfileSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        dispatch(updateEmployeeBillingAndWorkHour(values, action, params.id))\r\n                                        // .then((response)=> history.push('/dashboard/employee/profile/'))\r\n                                        .then((response)=> history.goBack())\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <h5>Update {employeeProfile.firstName} {employeeProfile.lastName} Billable</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* FIRST NAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">First Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        placeholder=\"Enter Firstname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.firstName && errors.firstName ? \"is-invalid\" : \"\"}`} \r\n                                                        readOnly\r\n\r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"firstName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* LAST NAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Last Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"lastName\"\r\n                                                        placeholder=\"Enter lastname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.lastName && errors.lastName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"lastName\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"lastName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* USERNAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Username</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"userName\"\r\n                                                        placeholder=\"Enter username\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.userName && errors.userName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"userName\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"userName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                            \r\n                                            {/* EXPECTED WORK HOUR */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Expected Work Hour</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        placeholder=\"Enter expectedWorkHours\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.expectedWorkHours && errors.expectedWorkHours ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"expectedWorkHours\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* BILL RATE CHARGE */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Bill Rate Charge</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"billRateCharge\"\r\n                                                        placeholder=\"Enter Bill Rate Charge\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.billRateCharge && errors.billRateCharge ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"billRateCharge\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"billRateCharge\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* PHONE NUMBER */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Phone Number</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"phone\"\r\n                                                        placeholder=\"Enter Phone Number\"\r\n                                                        type=\"tel\" \r\n                                                        className={`form-control ${touched.phone && errors.phone ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"phone\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"phone\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* CREATE PASSWORD */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">New Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password\"\r\n                                                        placeholder=\"New Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password && errors.password ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password\"\r\n                                                        readOnly\r\n                                                        autoComplete=\"on\"\r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* CONFIRM PASSWORD */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Confirm Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password2\"\r\n                                                        placeholder=\"Confirm Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password2 && errors.password2 ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password2\"\r\n                                                        readOnly\r\n                                                        autoComplete=\"on\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password2\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* ADDRESS */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"address\"\r\n                                                        id=\"address\"\r\n                                                        type=\"text\" \r\n                                                        placeholder=\"143 work and connect\"\r\n                                                        className={`form-control ${touched.address && errors.address ? \"is-invalid\" : \"\"}`}\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"address\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* Role */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Role</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <Field component=\"select\" name=\"roleID\" className=\"form-control\"\r\n                                                        readOnly\r\n                                                    >\r\n                                                        <option selected>Choose...</option>\r\n                                                        {availableRole}\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"roleID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n\r\n\r\n                                            {/* EMPLOYEE POSITION */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Position</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"staffRole\"\r\n                                                        placeholder=\"Enter Position\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.staffRole && errors.staffRole ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"staffRole\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"staffRole\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                           \r\n                                            {/* DEPARTMENT */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Department</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <Field component=\"select\" name=\"departmentID\" className=\"form-control\"\r\n                                                        readOnly\r\n                                                    >\r\n                                                        <option selected>Choose...</option>\r\n                                                        {companyDepartmentDropDown}\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"departmentID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                            \r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateEmployeeProfile;\r\n","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\toaster\\index.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\ShowDashboard.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\IndexArea.js",["425"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoRows.js",["426","427"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoForm.js",["428"],"// React \r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Action\r\nimport { closeTodoForm, addTodo } from '../../../../actions/todo/todoAction';\r\n\r\n// Layout\r\nimport Button from '../../../layouts/Button';\r\nimport { TextInput } from '../../../layouts/FormInput';\r\n\r\n// Formik\r\nimport { TodoListSchema } from '../../../Validation/Schema';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\n\r\n// Toaster\r\nimport { invalidTodoTitle } from '../../../../toaster/index';\r\n\r\n\r\n\r\n\r\nconst TodoForm = () =>{\r\n    const { isTodoFormOpen } = useSelector((state)=> state.todos);\r\n    const dispatch = useDispatch()\r\n    \r\n    return (\r\n        <>\r\n            <div  className='form-popup' id={`${isTodoFormOpen ? 'show-form' : \"hide-form\"  }`}>\r\n                <Formik\r\n                    initialValues = {\r\n                        {\r\n                            listName: '',\r\n                            dueDate: Date.now(),\r\n                        }\r\n                    }\r\n                    onSubmit={(values, action)=>{\r\n                        setTimeout(() => {\r\n                            dispatch(addTodo(values))\r\n                            action.resetForm({\r\n                                listName: '',\r\n                                dueDate: Date.now()\r\n                            })\r\n                        }, 2000);\r\n                        \r\n                    }}\r\n                    validationSchema = {TodoListSchema}\r\n                >{({ \r\n                    errors,\r\n                    touched, \r\n                    handleSubmit,\r\n                    isSubmitting\r\n                 })=>(\r\n              \r\n                    <Form\r\n                        className=\"todo-form-container\" \r\n                        onSubmit={ handleSubmit }\r\n                    >\r\n                        <label className=\"bg-primary d-flex justify-content-between align-items-center p-2 text-white\">\r\n                            <b>TODO</b>\r\n                            <i className=\"fa fa-times form-popdown-btn\" onClick={(()=>dispatch(closeTodoForm()))}></i>\r\n                        </label>\r\n                        <section className=\"todo-form-wrapper\">\r\n                            <label htmlFor=\"listName\"><b>Title</b></label>\r\n                            <TextInput \r\n                                type=\"text\"\r\n                                placeholder=\"Enter Todo\" \r\n                                name=\"listName\"\r\n                                className={` form-control ${ touched.listName && errors.listName ? \"is-invalid\" : \" \" }`}\r\n                            />\r\n                            <ErrorMessage\r\n                                component=\"span\"\r\n                                name=\"listName\"\r\n                                className=\"invalid-feedback mb-2\"\r\n                            />\r\n\r\n                            <label htmlFor=\"dueDate\"><b>Due Date </b></label>\r\n                            <TextInput \r\n                                type=\"datetime-local\"\r\n                                placeholder=\"Enter Due Date\" \r\n                                name=\"dueDate\"\r\n                                className={` form-control ${ touched.dueDate && errors.dueDate ? \"is-invalid\" : \" \" }`}\r\n\r\n                            />\r\n\r\n                            <ErrorMessage\r\n                                component=\"span\"\r\n                                name=\"dueDate\"\r\n                                className=\"invalid-feedback mb-2\"\r\n                            />\r\n\r\n                            <div className=\"d-flex\">\r\n                            {\r\n                                isSubmitting ? \r\n                                    <Button\r\n                                        disabled={isSubmitting}\r\n                                        icon = \"fas fa-circle-notch fa-spin\"\r\n                                        className=\"btn pace-btn-primary mr-2\"\r\n                                    \r\n                                    />\r\n                                :\r\n                                    <Button \r\n                                        type=\"submit\"\r\n                                        label=\"Add\"\r\n                                        className=\"btn pace-btn-primary mr-2\"\r\n                                    />\r\n                            }\r\n                            \r\n                            {/* <Button \r\n                                type=\"button\"\r\n                                label=\"Clear\"\r\n                                className=\"btn pace-btn-accent ml-2\"\r\n                            /> */}\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                    </Form>\r\n                    \r\n                )}\r\n\r\n                </Formik>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoForm;\r\n","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\NotificationCards.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AcceptedTasks.js",["429","430","431","432"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\PendingTasks.js",["433","434","435"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FETCH_TASKS_BY_STATUS_API_URL } from '../../../../services/root-endpoints';\r\nimport { authHeader, currentUserCompanyID, currentUserRoleID } from '../../../../services/auth-header';\r\nimport axios from 'axios';\r\nimport { somethingWentWrongLogger } from '../../../../toaster';\r\nimport { formatDate } from '../../../../_helper/dateFormatter';\r\nimport Loader from '../../../loader/Loader';\r\nimport { getTasks } from '../../../../actions/task/taskAction';\r\n\r\n// Set the departments component state\r\nconst handleFormatDate = (selectedDepartmentTaskSheet) =>{\r\n  const formatedTaskSheet = selectedDepartmentTaskSheet.map((taskRecord)=> {\r\n    taskRecord.endDate = formatDate(taskRecord.endDate) \r\n    taskRecord.dateCreated = formatDate(taskRecord.dateCreated) \r\n    return taskRecord\r\n  })\r\n  return formatedTaskSheet\r\n}\r\n\r\nconst PendingTasks = () => {\r\n  const { tasks } = useSelector(state => state.tasks)\r\n  const [pendingTasks, setPendingTasks] = useState([])\r\n  const [taskState, setTaskState] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory();\r\n\r\nconsole.log(pendingTasks);\r\n  \r\n  useEffect(() => {\r\n    // get all tasks\r\n    dispatch(getTasks())\r\n  }, [dispatch])\r\n\r\n  \r\n  useEffect(() => {\r\n    if(currentUserRoleID === 5){ // check if the user is an employee, then run this\r\n      setTaskState(tasks) // set the TaskState to tasks for the component to know about the update\r\n      const getPendingTasks = taskState.filter((task)=>task.taskStatus === 1) // filter out the tasks with status 2\r\n      setPendingTasks(handleFormatDate(getPendingTasks))\r\n      setIsLoading(false)\r\n    }else{ // else run this block\r\n      // Get all accepted tasks from the server\r\n      axios.get(FETCH_TASKS_BY_STATUS_API_URL + \"1/\" + currentUserCompanyID, { headers: authHeader } )\r\n      .then((response)=>{\r\n        // Set the response to the component state\r\n        setPendingTasks(handleFormatDate(response.data.data))\r\n        setIsLoading(false)\r\n      })\r\n      .catch((error)=>{\r\n        // somethingWentWrongLogger()\r\n        setIsLoading(false)\r\n      })\r\n    }\r\n  }, [tasks, taskState])\r\n\r\n  // adds checkbox to each row\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    headerColumnStyle: { backgroundColor: 'transparent' }\r\n  };\r\n  // styles each row\r\n  const rowStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n  // routes to full task details page on double click\r\n  // const taskDetails =  {\r\n  //   onClick: (e, row, rowIndex) => \r\n  //   { \r\n  //       console.log(row)\r\n  //       history.push(`/dashboard/task/view-task/`+ row.taskID)\r\n  //   }\r\n  // };\r\n  if(isLoading){\r\n    return (\r\n      <>\r\n        <Loader />        \r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <div >\r\n      \r\n      <Table\r\n        keyField='id'\r\n        title=\"Pending Tasks\"\r\n        data={pendingTasks }\r\n        columns={taskHeader}\r\n        bordered= { false }\r\n        selectRow = { selectRow }\r\n        enableSearch = { true }\r\n        pagination = { paginationFactory() }\r\n        // controlHeader = { navigate }\r\n        // rowEvents = { taskDetails }\r\n        noDataIndication={'No available task'}\r\n        filter={ filterFactory() }\r\n        rowStyle={ rowStyle }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst taskHeader = [\r\n     \r\n  {\r\n    dataField: 'taskName',\r\n    text: 'Title',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'dateCreated',\r\n    text: 'Assigned Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    text: 'Due Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'completed',\r\n    text: 'Status',\r\n    headerAttrs: {\r\n      hidden:true\r\n    },\r\n    // formatter: cell => selectOptionsArr.filter(opt => opt.value === cell)[0].label || '',\r\n    //   filter: selectFilter({\r\n    //     options: selectOptionsArr\r\n    //   })\r\n  },\r\n];\r\n\r\nexport default PendingTasks;","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\auth.service.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\timer\\timerAction.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\user.service.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\department\\NewDepartmentForm.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\company\\calendar\\calendarAction.js",["436"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EscheduleCard.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\todo.service.js",["437"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\eSchedule\\eScheduleReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\company\\calendar\\calendarReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Button.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AllTasks.js",["438","439","440","441","442","443","444","445"],"import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { getTasks } from '../../../../actions/task/taskAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Loader\r\nimport Loader from '../../../loader/Loader';\r\nimport { formatDate } from '../../../../_helper/dateFormatter';\r\n\r\n\r\n// Set the departments component state\r\nconst handleFormatDate = (selectedDepartmentTaskSheet) =>{\r\n  const formatedTaskSheet = selectedDepartmentTaskSheet.map((taskRecord)=> {\r\n    taskRecord.endDate = formatDate(taskRecord.endDate) \r\n    return taskRecord\r\n  })\r\n  return formatedTaskSheet\r\n}\r\n\r\nconst AllTasks = () => {\r\n\r\n  const { tasks, isFetching } = useSelector(state => state.tasks)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTasks())\r\n    console.log(tasks.taskStatus)\r\n  }, [tasks.taskStatus, dispatch])\r\n\r\n  // adds checkbox to each row\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    headerColumnStyle: { backgroundColor: 'transparent' }\r\n  };\r\n  // styles each row\r\n  const rowStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n\r\n  // routes to full task details page on double click\r\n  const taskDetails =  {\r\n    onClick: (e, row, rowIndex) =>\r\n    {\r\n        history.push(`/dashboard/task/view-task/`+ row.taskID)\r\n    }\r\n  };\r\n\r\n  \r\n  // If the task list is been fetched from the server or not mounted on the ui, show the loader \r\n  if(isFetching){\r\n    return(\r\n        <>\r\n            <Loader />\r\n        </>\r\n    )\r\n  }\r\n\r\n  const taskss = [\r\n    {\r\n      taskName: 'sss'\r\n    }\r\n  ]\r\n  return (\r\n    <div >\r\n      \r\n      <Table\r\n        keyField='id'\r\n        title=\"Task Inbox\"\r\n        data={ handleFormatDate(tasks) }\r\n        columns={taskHeader}\r\n        bordered= { false }\r\n        selectRow = {selectRow}\r\n        enableSearch = { true }\r\n        pagination = { paginationFactory() }\r\n        // controlHeader = { navigate }\r\n        rowEvents = { taskDetails }\r\n        noDataIndication={'No available task'}\r\n        filter={ filterFactory() }\r\n        rowStyle={ rowStyle }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst taskHeader = [\r\n\r\n  {\r\n    dataField: 'taskName',\r\n    text: 'Title',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    text: 'Due Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'documentsAttached',\r\n    text: 'Attachment',\r\n    formatter: (cell, row) => {\r\n      if(!cell){\r\n      return(\r\n        <i class=\"fa fa-paperclip\" />\r\n      )}\r\n    },\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'taskStatus',\r\n    text: 'Status',\r\n    headerAttrs: {\r\n      hidden:true\r\n    },\r\n    formatter: (cell, row) => {\r\n      if(cell){\r\n      // return(\r\n        switch (cell) {\r\n          case 1:\r\n              return (\r\n               <>\r\n                <i> pending </i>\r\n               </>\r\n              ) \r\n          case 2:\r\n              return (\r\n              <i> accepted </i>\r\n             )\r\n          case 3:\r\n              return ( \r\n                <i> completed </i>\r\n                )\r\n          default: \r\n              break;\r\n      }\r\n      // )\r\n    }\r\n    }\r\n  },\r\n];\r\n\r\n\r\nconst navigate = <>\r\n<div className=\"btn-group\">\r\n<a data-toggle=\"dropdown\" href=\"/\" className=\"btn mini all\">\r\nAll\r\n  <i className=\"fa fa-angle-down ml-1\" />\r\n</a>\r\n<ul className=\"dropdown-menu\">\r\n  <li className=\"\">\r\n    <NavLink exact to=\"/dashboard/task/accepted-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n      <i className=\"mr-3 text-gray\"/><span>Accepted</span>\r\n    </NavLink>\r\n  </li>\r\n  <li className=\"\">\r\n    <NavLink exact to=\"/dashboard/task/assigned-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n      <i className=\"mr-3 text-gray\"/><span>Assigned</span>\r\n    </NavLink>\r\n  </li>\r\n  <li className=\"\">\r\n    <NavLink exact to=\"/dashboard/task/pending-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n      <i className=\"mr-3 text-gray\"/><span>Pending</span>\r\n    </NavLink>\r\n  </li>\r\n</ul>\r\n</div>\r\n<div className=\"btn-group\">\r\n<a data-toggle=\"dropdown\" href=\"#\" className=\"btn mini blue\">\r\nMore\r\n  <i className=\"fa fa-angle-down ml-1\" />\r\n</a>\r\n<ul className=\"dropdown-menu\">\r\n  <li><a href=\"#\"><i className=\"fa fa-pencil\" /> Mark as Read</a></li>\r\n  <li><a href=\"#\"><i className=\"fa fa-ban\" /> Spam</a></li>\r\n  <li className=\"divider\" />\r\n  <li><a href=\"#\"><i className=\"fa fa-trash-o\" /> Delete</a></li>\r\n</ul>                           \r\n</div>\r\n</>\r\n\r\n\r\n\r\nexport default AllTasks;","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\timer\\TimerReportReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\authentication\\authReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\company\\department\\departmentReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\company\\payment\\planPurchase.service.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\task.service.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Login.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\App.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\ContactUs.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Signup.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\rough\\Test.js",["446","447","448"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Footer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Button.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Home.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\About.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Index.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Task.js",["449","450","451"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\PersonalTimeSheet.js",["452","453","454"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TaskReport.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\user\\Profile.js",["455","456"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\user\\userAction.js",["457","458","459"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TimerReport.js",["460"],"import React, { useEffect } from 'react';\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCompanyTimerReport } from '../../../../actions/timer/timerAction';\r\n\r\n\r\nconst Header = [\r\n  {\r\n    dataField: 'id',\r\n    text: 'S/N'\r\n  },\r\n  {\r\n    dataField: 'firstname',\r\n    text: 'Firstname',\r\n  },\r\n  {\r\n    dataField: 'lastname',\r\n    text: 'Lastname',\r\n  },\r\n  {\r\n    dataField: 'department',\r\n    text: 'Department',\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Role',\r\n  },\r\n  {\r\n    dataField: 'workedHour',\r\n    text: 'Worked Hour',\r\n  },\r\n  {\r\n    dataField: 'completedTask',\r\n    text: 'Completed Task',\r\n  },\r\n    \r\n//   {\r\n  \r\n//     formatter: (cellContent, row) => {\r\n//       return (\r\n//         <>\r\n//         <button\r\n//           className=\"btn btn-danger btn-xs mr-3\"\r\n//           onClick={(e) => handleDelete(row)} \r\n//         >\r\n//           Delete\r\n//         </button>\r\n//         <button\r\n//           className=\"btn btn-danger btn-xs\"\r\n//           onClick={(e) => handleDelete(row)} \r\n//         >\r\n//           Delete\r\n//         </button>\r\n//         </>\r\n//       );\r\n//     },\r\n//   },\r\n\r\n];\r\n\r\n\r\n// function handleDelete(rowId){\r\n//   console.log(rowId);\r\n// };\r\n\r\n\r\nconst TimerReport = () => {\r\n    const usersDetails = useSelector(state => state.timerReport);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n      dispatch(fetchCompanyTimerReport())\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"container-fluid py-5\">\r\n          <Table\r\n            keyField='id'\r\n            title=\"Timer Report\"\r\n            data={usersDetails}\r\n            columns={Header}\r\n            bordered= { false }\r\n            pagination = { paginationFactory() }\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimerReport;","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\Settings\\Settings.js",["461","462","463"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport Swal from 'sweetalert2';\r\nimport { initializeBasicPayment, initializePremiumPayment, initiatePayment } from '../../../actions/company/payment/planPurchaseAction'\r\nimport { somethingWentWrongLogger } from '../../../toaster';\r\n\r\nconst Settings = () =>{\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [basicLoading, setBasicLoading] = useState(false)\r\n    const [premiumLoading, setPremiumLoading] = useState(false)\r\n    const basicPlan = 122;\r\n    const premiumPlan = 133;\r\n    return(\r\n        <>\r\n\r\n            <div className=\"container py-5\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n\r\n                      \r\n                        \r\n                        `\r\n                    }\r\n                </style>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-lg-4\">\r\n                    {/* Pricing Card */}\r\n                    <div className=\"pricing-card\">\r\n                    <div className=\"card shadow-sm border-light text-center mt-1\">\r\n                        {/* Header */}\r\n                        <header className=\"card-header bg-white p-3\">\r\n                        <h2 className=\"h5 text-primary mb-4\">Free</h2>\r\n                        <span className=\"d-block\">\r\n                            <span className=\"display-4 text-dark font-weight-bold\">\r\n                            <span className=\"align-top font-medium\">#</span>0\r\n                            </span>\r\n                            <span className=\"d-block text-dark font-small\">/ month</span>\r\n                        </span>\r\n\r\n                        </header>\r\n                        {/* End Header */}\r\n                        {/* Content */}\r\n                        <div className=\"card-body\">\r\n                        <ul className=\"list-group mb-4\">\r\n                            <li className=\"list-group-item\"><strong></strong> Timer Reminder</li>\r\n                            <li className=\"list-group-item\">Timer Reminder</li>\r\n                            <li className=\"list-group-item\">Workspace for 3 staff</li>\r\n                            <li className=\"list-group-item\">Limited Todo and eSchedule</li>\r\n                        </ul>\r\n                        <button type=\"button\" className=\"btn btn-primary btn-block animate-up-1\" tabIndex={0} disabled>\r\n                            Current Plan\r\n                        </button>\r\n                        </div>\r\n                        {/* End Content */}\r\n                    </div>\r\n                    </div>\r\n                    {/* End of Pricing Card */}\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-4\">\r\n                    {/* Pricing Card */}\r\n                    <div className=\"pricing-card\">\r\n                    <div className=\"card shadow-sm border-light text-center mt-1\">\r\n                        {/* Header */}\r\n                        <header className=\"card-header bg-white p-3\">\r\n                        <h2 className=\"h5 text-secondary mb-4\">Basic</h2>\r\n                        <span className=\"d-block\">\r\n                            <span className=\"display-4 text-dark font-weight-bold\">\r\n                            <span className=\"align-top font-medium\">#</span>12, 000\r\n                            </span>\r\n                            <span className=\"d-block text-dark font-small\">/ month</span>\r\n                        </span>\r\n                        </header>\r\n                        {/* End Header */}\r\n                        {/* Content */}\r\n                        <div className=\"card-body\">\r\n                        <ul className=\"list-group mb-4\">\r\n                            <li className=\"list-group-item\"><strong></strong> Timer Reminder</li>\r\n                            <li className=\"list-group-item\">Workspace for 7 staffs</li>\r\n                            <li className=\"list-group-item\">Unlimited Todo</li>\r\n                            <li className=\"list-group-item\">Task Report</li>\r\n                        </ul>\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"btn btn-secondary btn-block animate-up-1\" \r\n                            tabIndex={0}\r\n                            onClick={(()=>{\r\n                                setBasicLoading(true)\r\n                                dispatch(initializeBasicPayment(basicPlan))\r\n                                .then((response) => {\r\n                                    const parsedResponse = JSON.parse(response.data);\r\n                                    const redirectLink = parsedResponse.data.link\r\n                                    Swal.fire({\r\n                                        title: '<strong>Payment <u>Initialized</u></strong>',\r\n                                        icon: 'question',\r\n                                        allowOutsideClick: false,\r\n                                        html:\r\n                                        'You\\'re about to be redirected to <b> Basic Payment!</b>, ',\r\n                                        showCloseButton: true,\r\n                                        showCancelButton: true,\r\n                                        focusConfirm: false,\r\n                                        confirmButtonText:\r\n                                        `<a href=${redirectLink} target=\"_blank\" class=\"text-white\"> <i class=\"text-white fa fa-thumbs-up\"></i> Continue! </a>`,\r\n                                        cancelButtonText:\r\n                                        'Cancel Payment',\r\n                                    }).then((result)=>{\r\n                                        if(result.dismiss === Swal.DismissReason.cancel){\r\n                                            setBasicLoading(false)\r\n                                        }else{\r\n                                            setBasicLoading(false)\r\n                                        }\r\n                                    })\r\n                                })\r\n                                .catch((error)=>{\r\n                                    somethingWentWrongLogger()\r\n                                })\r\n                            })}\r\n\r\n                        >\r\n                            {\r\n                                basicLoading ? (\r\n                                    <>\r\n                                        Please wait <i className=\"fa fa-spinner fa-spin\"></i>\r\n                                    </>\r\n                                )  \r\n                                : \r\n                                (\r\n                                    'Start Basic ' \r\n                                )\r\n                            }\r\n                        </button>\r\n                        </div>\r\n                        {/* End Content */}\r\n                    </div>\r\n                    </div>\r\n                    {/* End of Pricing Card */}\r\n                    \r\n                </div>\r\n       \r\n       \r\n                <div className=\"col-md-6 col-lg-4\">\r\n                    {/* Pricing Card */}\r\n                    <div className=\"pricing-card\">\r\n                    <div className=\"card shadow-sm border-light text-center mt-1\">\r\n                        {/* Header */}\r\n                        <header className=\"card-header bg-white p-3\">\r\n                        <h2 className=\"h5 text-primary mb-4\">Premium</h2>\r\n                        <span className=\"d-block\">\r\n                            <span className=\"display-4 text-dark font-weight-bold\">\r\n                            <span className=\"align-top font-medium\">#</span>32, 000\r\n                            </span>\r\n                            <span className=\"d-block text-dark font-small\">/ month</span>\r\n                        </span>\r\n                        </header>\r\n                        {/* End Header */}\r\n                        {/* Content */}\r\n                        <div className=\"card-body\">\r\n                        <ul className=\"list-group mb-4\">\r\n                            <li className=\"list-group-item\"><strong></strong> Screenshot (Beta)</li>\r\n                            <li className=\"list-group-item\">Unlimited staffs Workspace</li>\r\n                            <li className=\"list-group-item\">Unlimited Reports Access </li>\r\n                            <li className=\"list-group-item\">Unlimited Self Management Tools</li>\r\n                        </ul>\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"btn btn-primary btn-block animate-up-1\" \r\n                            tabIndex={0}\r\n                            onClick={(()=>{\r\n                                setPremiumLoading(true)\r\n                                dispatch(initializePremiumPayment(premiumPlan))\r\n                                .then((response) => {\r\n                                    const parsedResponse = JSON.parse(response.data);\r\n                                    const redirectLink = parsedResponse.data.link\r\n                                    Swal.fire({\r\n                                        title: '<strong>Payment <u>Initialized</u></strong>',\r\n                                        icon: 'question',\r\n                                        html:\r\n                                        'You\\'re about to be redirected for <b> Premium Payment!</b>, ',\r\n                                        showCloseButton: true,\r\n                                        showCancelButton: true,\r\n                                        allowOutsideClick: false,\r\n                                        focusConfirm: false,\r\n                                        confirmButtonText:\r\n                                        `<a href=${redirectLink} target=\"_blank\" class=\"text-white\"><i class=\"text-white fa fa-thumbs-up\"></i> Continue!</a> `,\r\n                                        cancelButtonText:\r\n                                        'Cancel Payment',\r\n                                    }).then((result)=>{\r\n                                        if(result.dismiss === Swal.DismissReason.cancel){\r\n                                            console.log('ejejejeejejej');\r\n                                            setPremiumLoading(false)\r\n                                        }else{\r\n                                            setPremiumLoading(false)\r\n                                        }\r\n                                    })\r\n                                })\r\n                                .catch((error)=>{\r\n                                    somethingWentWrongLogger()\r\n                                    setPremiumLoading(false)\r\n                                })\r\n                            })}\r\n                        >\r\n                            {\r\n                                premiumLoading ? (\r\n                                    <>\r\n                                        Please wait <i className=\"fa fa-spinner fa-spin\"></i>\r\n                                    </>\r\n                                )  \r\n                                : \r\n                                (\r\n                                    'Upgrade Premium' \r\n                                )\r\n                            }\r\n                        </button>\r\n                        </div>\r\n                        {/* End Content */}\r\n                    </div>\r\n                    </div>\r\n                    {/* End of Pricing Card */}\r\n                </div>\r\n        </div>\r\n</div>\r\n\r\n        </>  \r\n    )\r\n}\r\n\r\n\r\nexport default Settings;","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\root-endpoints.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\Features.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\MostActiveEmployee.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\Completed.js",["464","465","466"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FETCH_TASKS_BY_STATUS_API_URL } from '../../../../services/root-endpoints';\r\nimport { authHeader, currentUserCompanyID, currentUserRoleID } from '../../../../services/auth-header';\r\nimport axios from 'axios';\r\nimport { somethingWentWrongLogger } from '../../../../toaster';\r\nimport { formatDate } from '../../../../_helper/dateFormatter';\r\nimport Loader from '../../../loader/Loader';\r\nimport { getTasks } from '../../../../actions/task/taskAction';\r\n\r\n// Set the departments component state\r\nconst handleFormatDate = (selectedDepartmentTaskSheet) =>{\r\n  const formatedTaskSheet = selectedDepartmentTaskSheet.map((taskRecord)=> {\r\n    taskRecord.endDate = formatDate(taskRecord.endDate) \r\n    taskRecord.dateCreated = formatDate(taskRecord.dateCreated) \r\n    return taskRecord\r\n  })\r\n  return formatedTaskSheet\r\n}\r\n\r\nconst CompletedTasks = () => {\r\n  const { tasks } = useSelector(state => state.tasks)\r\n  const [completedTasks, setCompletedTasks] = useState([])\r\n  const [taskState, setTaskState] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory();\r\n\r\nconsole.log(completedTasks);\r\n  \r\n  useEffect(() => {\r\n    // get all tasks\r\n    dispatch(getTasks())\r\n  }, [dispatch])\r\n\r\n  \r\n  useEffect(() => {\r\n    if(currentUserRoleID === 5){ // check if the user is an employee, then run this\r\n      setTaskState(tasks) // set the TaskState to tasks for the component to know about the update\r\n      const getCompletedTasks = taskState.filter((task)=>task.taskStatus === 3) // filter out the tasks with status 2\r\n      setCompletedTasks(handleFormatDate(getCompletedTasks))\r\n      setIsLoading(false)\r\n    }else{ // else run this block\r\n      // Get all accepted tasks from the server\r\n      axios.get(FETCH_TASKS_BY_STATUS_API_URL + \"3/\" + currentUserCompanyID, { headers: authHeader } )\r\n      .then((response)=>{\r\n        // Set the response to the component state\r\n        setCompletedTasks(handleFormatDate(response.data.data))\r\n        setIsLoading(false)\r\n      })\r\n      .catch((error)=>{\r\n        // somethingWentWrongLogger()\r\n        setIsLoading(false)\r\n      })\r\n    }\r\n  }, [tasks, taskState])\r\n\r\n  // adds checkbox to each row\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    headerColumnStyle: { backgroundColor: 'transparent' }\r\n  };\r\n  // styles each row\r\n  const rowStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n  // routes to full task details page on double click\r\n  // const taskDetails =  {\r\n  //   onClick: (e, row, rowIndex) => \r\n  //   { \r\n  //       console.log(row)\r\n  //       history.push(`/dashboard/task/view-task/`+ row.taskID)\r\n  //   }\r\n  // };\r\n  if(isLoading){\r\n    return (\r\n      <>\r\n        <Loader />        \r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <div >\r\n      \r\n      <Table\r\n        keyField='id'\r\n        title=\"Completed Tasks\"\r\n        data={completedTasks }\r\n        columns={taskHeader}\r\n        bordered= { false }\r\n        selectRow = { selectRow }\r\n        enableSearch = { true }\r\n        pagination = { paginationFactory() }\r\n        // controlHeader = { navigate }\r\n        // rowEvents = { taskDetails }\r\n        noDataIndication={'No available task'}\r\n        filter={ filterFactory() }\r\n        rowStyle={ rowStyle }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst taskHeader = [\r\n     \r\n  {\r\n    dataField: 'taskName',\r\n    text: 'Title',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'dateCreated',\r\n    text: 'Assigned Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    text: 'Due Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'completed',\r\n    text: 'Status',\r\n    headerAttrs: {\r\n      hidden:true\r\n    },\r\n    // formatter: cell => selectOptionsArr.filter(opt => opt.value === cell)[0].label || '',\r\n    //   filter: selectFilter({\r\n    //     options: selectOptionsArr\r\n    //   })\r\n  },\r\n];\r\n\r\nexport default CompletedTasks;","C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\TaskInboxSample.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\eschedule\\eScheduleAction.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\_helper\\dateFormatter.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\company\\department\\departmentAction.js",["467"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\company\\company-service.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\company\\employee\\employeeReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\task\\acceptedTaskReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Tooltip.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Text.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\TodoCard.js",["468"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\company\\department-service.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\SampleCompose.js",["469"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\todo\\todoAction.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\settings.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\DraftTask.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Dashboard.js",["470","471","472"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Navbar.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\Validation\\Schema.js",["473"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\Todo.js",["474"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\eSchedule\\Eschedule.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Sidebar.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\EmployeeList.js",["475"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\index.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\Sample.js",["476","477","478","479","480","481","482","483","484","485"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\Timer.js",["486","487","488","489","490","491","492","493"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\reducers\\timer\\timerReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\components\\pages\\pages-js\\TypeWriter.js",[],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\actions\\task\\taskAction.js",["494","495","496","497"],"C:\\Users\\Unclebay\\Desktop\\projects\\Tiidelab\\Pace-Employee-TimeSheet\\src\\services\\timer\\timer.Service.js",[],{"ruleId":"498","replacedBy":"499"},{"ruleId":"500","replacedBy":"501"},{"ruleId":"498","replacedBy":"502"},{"ruleId":"500","replacedBy":"503"},{"ruleId":"504","severity":1,"message":"505","line":30,"column":72,"nodeType":"506","endLine":30,"endColumn":87},{"ruleId":"507","severity":1,"message":"508","line":2,"column":8,"nodeType":"509","messageId":"510","endLine":2,"endColumn":17},{"ruleId":"507","severity":1,"message":"511","line":2,"column":8,"nodeType":"509","messageId":"510","endLine":2,"endColumn":15},{"ruleId":"507","severity":1,"message":"512","line":5,"column":16,"nodeType":"509","messageId":"510","endLine":5,"endColumn":24},{"ruleId":"507","severity":1,"message":"513","line":16,"column":10,"nodeType":"509","messageId":"510","endLine":16,"endColumn":21},{"ruleId":"507","severity":1,"message":"514","line":16,"column":23,"nodeType":"509","messageId":"510","endLine":16,"endColumn":50},{"ruleId":"507","severity":1,"message":"515","line":16,"column":71,"nodeType":"509","messageId":"510","endLine":16,"endColumn":89},{"ruleId":"507","severity":1,"message":"516","line":18,"column":8,"nodeType":"509","messageId":"510","endLine":18,"endColumn":18},{"ruleId":"507","severity":1,"message":"517","line":25,"column":11,"nodeType":"509","messageId":"510","endLine":25,"endColumn":18},{"ruleId":"507","severity":1,"message":"518","line":27,"column":26,"nodeType":"509","messageId":"510","endLine":27,"endColumn":36},{"ruleId":"519","severity":1,"message":"520","line":44,"column":8,"nodeType":"521","endLine":44,"endColumn":18,"suggestions":"522"},{"ruleId":"523","severity":1,"message":"524","line":84,"column":29,"nodeType":"525","endLine":84,"endColumn":182},{"ruleId":"523","severity":1,"message":"524","line":138,"column":29,"nodeType":"525","endLine":138,"endColumn":158},{"ruleId":"507","severity":1,"message":"526","line":5,"column":10,"nodeType":"509","messageId":"510","endLine":5,"endColumn":19},{"ruleId":"507","severity":1,"message":"527","line":7,"column":7,"nodeType":"509","messageId":"510","endLine":7,"endColumn":11},{"ruleId":"507","severity":1,"message":"528","line":17,"column":8,"nodeType":"509","messageId":"510","endLine":17,"endColumn":22},{"ruleId":"507","severity":1,"message":"529","line":51,"column":17,"nodeType":"509","messageId":"510","endLine":51,"endColumn":22},{"ruleId":"530","severity":1,"message":"531","line":62,"column":53,"nodeType":"532","messageId":"533","endLine":62,"endColumn":57},{"ruleId":"519","severity":1,"message":"534","line":23,"column":6,"nodeType":"521","endLine":23,"endColumn":18,"suggestions":"535"},{"ruleId":"519","severity":1,"message":"534","line":23,"column":8,"nodeType":"521","endLine":23,"endColumn":10,"suggestions":"536"},{"ruleId":"507","severity":1,"message":"537","line":10,"column":10,"nodeType":"509","messageId":"510","endLine":10,"endColumn":14},{"ruleId":"507","severity":1,"message":"538","line":2,"column":37,"nodeType":"509","messageId":"510","endLine":2,"endColumn":42},{"ruleId":"507","severity":1,"message":"539","line":12,"column":10,"nodeType":"509","messageId":"510","endLine":12,"endColumn":38},{"ruleId":"507","severity":1,"message":"540","line":12,"column":40,"nodeType":"509","messageId":"510","endLine":12,"endColumn":63},{"ruleId":"507","severity":1,"message":"541","line":36,"column":7,"nodeType":"509","messageId":"510","endLine":36,"endColumn":20},{"ruleId":"507","severity":1,"message":"542","line":43,"column":24,"nodeType":"509","messageId":"510","endLine":43,"endColumn":34},{"ruleId":"507","severity":1,"message":"543","line":56,"column":11,"nodeType":"509","messageId":"510","endLine":56,"endColumn":36},{"ruleId":"507","severity":1,"message":"544","line":4,"column":8,"nodeType":"509","messageId":"510","endLine":4,"endColumn":18},{"ruleId":"507","severity":1,"message":"545","line":24,"column":12,"nodeType":"509","messageId":"510","endLine":24,"endColumn":22},{"ruleId":"507","severity":1,"message":"546","line":24,"column":24,"nodeType":"509","messageId":"510","endLine":24,"endColumn":37},{"ruleId":"507","severity":1,"message":"547","line":17,"column":10,"nodeType":"509","messageId":"510","endLine":17,"endColumn":26},{"ruleId":"507","severity":1,"message":"548","line":8,"column":25,"nodeType":"509","messageId":"510","endLine":8,"endColumn":37},{"ruleId":"507","severity":1,"message":"515","line":11,"column":63,"nodeType":"509","messageId":"510","endLine":11,"endColumn":81},{"ruleId":"507","severity":1,"message":"549","line":13,"column":10,"nodeType":"509","messageId":"510","endLine":13,"endColumn":34},{"ruleId":"507","severity":1,"message":"517","line":34,"column":9,"nodeType":"509","messageId":"510","endLine":34,"endColumn":16},{"ruleId":"507","severity":1,"message":"548","line":6,"column":25,"nodeType":"509","messageId":"510","endLine":6,"endColumn":37},{"ruleId":"507","severity":1,"message":"549","line":11,"column":10,"nodeType":"509","messageId":"510","endLine":11,"endColumn":34},{"ruleId":"507","severity":1,"message":"517","line":32,"column":9,"nodeType":"509","messageId":"510","endLine":32,"endColumn":16},{"ruleId":"507","severity":1,"message":"550","line":4,"column":10,"nodeType":"509","messageId":"510","endLine":4,"endColumn":33},{"ruleId":"507","severity":1,"message":"515","line":5,"column":22,"nodeType":"509","messageId":"510","endLine":5,"endColumn":40},{"ruleId":"507","severity":1,"message":"551","line":1,"column":28,"nodeType":"509","messageId":"510","endLine":1,"endColumn":36},{"ruleId":"507","severity":1,"message":"548","line":6,"column":25,"nodeType":"509","messageId":"510","endLine":6,"endColumn":37},{"ruleId":"507","severity":1,"message":"552","line":62,"column":9,"nodeType":"509","messageId":"510","endLine":62,"endColumn":15},{"ruleId":"507","severity":1,"message":"553","line":152,"column":7,"nodeType":"509","messageId":"510","endLine":152,"endColumn":15},{"ruleId":"554","severity":1,"message":"555","line":177,"column":1,"nodeType":"525","endLine":177,"endColumn":62},{"ruleId":"554","severity":1,"message":"555","line":182,"column":7,"nodeType":"525","endLine":182,"endColumn":19},{"ruleId":"554","severity":1,"message":"555","line":183,"column":7,"nodeType":"525","endLine":183,"endColumn":19},{"ruleId":"554","severity":1,"message":"555","line":185,"column":7,"nodeType":"525","endLine":185,"endColumn":19},{"ruleId":"507","severity":1,"message":"556","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":16},{"ruleId":"507","severity":1,"message":"538","line":3,"column":18,"nodeType":"509","messageId":"510","endLine":3,"endColumn":23},{"ruleId":"507","severity":1,"message":"557","line":3,"column":25,"nodeType":"509","messageId":"510","endLine":3,"endColumn":29},{"ruleId":"507","severity":1,"message":"558","line":3,"column":9,"nodeType":"509","messageId":"510","endLine":3,"endColumn":16},{"ruleId":"507","severity":1,"message":"559","line":11,"column":8,"nodeType":"509","messageId":"510","endLine":11,"endColumn":21},{"ruleId":"507","severity":1,"message":"560","line":13,"column":8,"nodeType":"509","messageId":"510","endLine":13,"endColumn":14},{"ruleId":"507","severity":1,"message":"561","line":69,"column":11,"nodeType":"509","messageId":"510","endLine":69,"endColumn":23},{"ruleId":"507","severity":1,"message":"562","line":70,"column":23,"nodeType":"509","messageId":"510","endLine":70,"endColumn":34},{"ruleId":"519","severity":1,"message":"534","line":78,"column":8,"nodeType":"521","endLine":78,"endColumn":10,"suggestions":"563"},{"ruleId":"507","severity":1,"message":"564","line":11,"column":8,"nodeType":"509","messageId":"510","endLine":11,"endColumn":14},{"ruleId":"507","severity":1,"message":"565","line":40,"column":11,"nodeType":"509","messageId":"510","endLine":40,"endColumn":19},{"ruleId":"507","severity":1,"message":"566","line":1,"column":8,"nodeType":"509","messageId":"510","endLine":1,"endColumn":13},{"ruleId":"507","severity":1,"message":"567","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":20},{"ruleId":"507","severity":1,"message":"568","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":17},{"ruleId":"519","severity":1,"message":"534","line":74,"column":8,"nodeType":"521","endLine":74,"endColumn":10,"suggestions":"569"},{"ruleId":"507","severity":1,"message":"570","line":4,"column":8,"nodeType":"509","messageId":"510","endLine":4,"endColumn":12},{"ruleId":"507","severity":1,"message":"571","line":6,"column":60,"nodeType":"509","messageId":"510","endLine":6,"endColumn":75},{"ruleId":"507","severity":1,"message":"517","line":11,"column":11,"nodeType":"509","messageId":"510","endLine":11,"endColumn":18},{"ruleId":"507","severity":1,"message":"548","line":6,"column":25,"nodeType":"509","messageId":"510","endLine":6,"endColumn":37},{"ruleId":"507","severity":1,"message":"549","line":11,"column":10,"nodeType":"509","messageId":"510","endLine":11,"endColumn":34},{"ruleId":"507","severity":1,"message":"517","line":32,"column":9,"nodeType":"509","messageId":"510","endLine":32,"endColumn":16},{"ruleId":"507","severity":1,"message":"572","line":5,"column":5,"nodeType":"509","messageId":"510","endLine":5,"endColumn":21},{"ruleId":"507","severity":1,"message":"573","line":2,"column":17,"nodeType":"509","messageId":"510","endLine":2,"endColumn":26},{"ruleId":"574","severity":1,"message":"575","line":21,"column":35,"nodeType":"506","endLine":21,"endColumn":57},{"ruleId":"507","severity":1,"message":"576","line":30,"column":10,"nodeType":"509","messageId":"510","endLine":30,"endColumn":25},{"ruleId":"507","severity":1,"message":"514","line":39,"column":10,"nodeType":"509","messageId":"510","endLine":39,"endColumn":37},{"ruleId":"507","severity":1,"message":"517","line":48,"column":11,"nodeType":"509","messageId":"510","endLine":48,"endColumn":18},{"ruleId":"507","severity":1,"message":"577","line":8,"column":7,"nodeType":"509","messageId":"510","endLine":8,"endColumn":18},{"ruleId":"507","severity":1,"message":"578","line":10,"column":10,"nodeType":"509","messageId":"510","endLine":10,"endColumn":18},{"ruleId":"507","severity":1,"message":"579","line":78,"column":9,"nodeType":"509","messageId":"510","endLine":78,"endColumn":23},{"ruleId":"554","severity":1,"message":"555","line":60,"column":17,"nodeType":"525","endLine":60,"endColumn":29},{"ruleId":"554","severity":1,"message":"555","line":61,"column":17,"nodeType":"525","endLine":61,"endColumn":29},{"ruleId":"554","severity":1,"message":"555","line":65,"column":19,"nodeType":"525","endLine":65,"endColumn":65},{"ruleId":"580","severity":1,"message":"581","line":66,"column":21,"nodeType":"525","endLine":66,"endColumn":45},{"ruleId":"554","severity":1,"message":"555","line":73,"column":21,"nodeType":"525","endLine":73,"endColumn":33},{"ruleId":"554","severity":1,"message":"555","line":74,"column":21,"nodeType":"525","endLine":74,"endColumn":33},{"ruleId":"554","severity":1,"message":"555","line":78,"column":19,"nodeType":"525","endLine":78,"endColumn":60},{"ruleId":"580","severity":1,"message":"581","line":79,"column":21,"nodeType":"525","endLine":79,"endColumn":45},{"ruleId":"554","severity":1,"message":"555","line":86,"column":21,"nodeType":"525","endLine":86,"endColumn":33},{"ruleId":"554","severity":1,"message":"555","line":87,"column":21,"nodeType":"525","endLine":87,"endColumn":33},{"ruleId":"507","severity":1,"message":"582","line":12,"column":10,"nodeType":"509","messageId":"510","endLine":12,"endColumn":31},{"ruleId":"507","severity":1,"message":"583","line":12,"column":45,"nodeType":"509","messageId":"510","endLine":12,"endColumn":54},{"ruleId":"507","severity":1,"message":"584","line":22,"column":13,"nodeType":"509","messageId":"510","endLine":22,"endColumn":24},{"ruleId":"507","severity":1,"message":"585","line":22,"column":26,"nodeType":"509","messageId":"510","endLine":22,"endColumn":40},{"ruleId":"519","severity":1,"message":"534","line":57,"column":8,"nodeType":"521","endLine":57,"endColumn":49,"suggestions":"586"},{"ruleId":"507","severity":1,"message":"587","line":63,"column":42,"nodeType":"509","messageId":"510","endLine":63,"endColumn":73},{"ruleId":"519","severity":1,"message":"588","line":72,"column":11,"nodeType":"589","endLine":90,"endColumn":6,"suggestions":"590"},{"ruleId":"591","severity":1,"message":"592","line":113,"column":21,"nodeType":"593","messageId":"594","endLine":113,"endColumn":37},{"ruleId":"507","severity":1,"message":"595","line":6,"column":3,"nodeType":"509","messageId":"510","endLine":6,"endColumn":21},{"ruleId":"507","severity":1,"message":"596","line":7,"column":3,"nodeType":"509","messageId":"510","endLine":7,"endColumn":14},{"ruleId":"507","severity":1,"message":"597","line":8,"column":3,"nodeType":"509","messageId":"510","endLine":8,"endColumn":14},{"ruleId":"507","severity":1,"message":"598","line":11,"column":3,"nodeType":"509","messageId":"510","endLine":11,"endColumn":23},"no-native-reassign",["599"],"no-negated-in-lhs",["600"],["599"],["600"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'sendImage' is defined but never used.","Identifier","unusedVar","'oneStep' is defined but never used.","'Redirect' is defined but never used.","'accessToken' is defined but never used.","'currentUserFromLocalStorage' is defined but never used.","'currentUserStaffID' is defined but never used.","'TimerRough' is defined but never used.","'history' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'staffID'. Either include it or remove the dependency array.","ArrayExpression",["601"],"jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","JSXOpeningElement","'TextInput' is defined but never used.","'calc' is assigned a value but never used.","'ChangePassword' is defined but never used.","'Image' is assigned a value but never used.","valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["602"],["603"],"'date' is defined but never used.","'Field' is defined but never used.","'profileUpdateCompletedLogger' is defined but never used.","'profileUpdateFailLogger' is defined but never used.","'availableRole' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'companyDepartmentDropDown' is assigned a value but never used.","'TypeWriter' is defined but never used.","'todosState' is assigned a value but never used.","'setTodosState' is assigned a value but never used.","'invalidTodoTitle' is defined but never used.","'selectFilter' is defined but never used.","'somethingWentWrongLogger' is defined but never used.","'EDIT_CALENDAR_EVENT_API' is defined but never used.","'useState' is defined but never used.","'taskss' is assigned a value but never used.","'navigate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Formik' is defined but never used.","'Form' is defined but never used.","'NavLink' is defined but never used.","'EmployeeTasks' is defined but never used.","'Button' is defined but never used.","'usersDetails' is assigned a value but never used.","'seTimeSheet' is assigned a value but never used.",["604"],"'Loader' is defined but never used.","'dispatch' is assigned a value but never used.","'axios' is defined but never used.","'authHeader' is defined but never used.","'options' is defined but never used.",["605"],"'swal' is defined but never used.","'initiatePayment' is defined but never used.","'ERROR_DEPARTMENT' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","'syncCurrentUser' is defined but never used.","'phoneRegExp' is assigned a value but never used.","'getTodos' is defined but never used.","'employeesLists' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'initializeNewDayTimer' is defined but never used.","'stopTimer' is defined but never used.","'timerStatus' is assigned a value but never used.","'setTimerStatus' is assigned a value but never used.",["606"],"'setTimerSessionFromLocalStorage' is assigned a value but never used.","The 'handleStartTimer' function makes the dependencies of useEffect Hook (at line 142) change on every render. To fix this, wrap the definition of 'handleStartTimer' in its own useCallback() Hook.","VariableDeclarator",["607"],"no-dupe-keys","Duplicate key 'showCancelButton'.","ObjectExpression","unexpected","'UPDATE_TASK_STATUS' is defined but never used.","'ASSIGN_TASK' is defined but never used.","'TASKS_ERROR' is defined but never used.","'TOGGLE_TODO_COMPLETE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"612","fix":"614"},{"desc":"612","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},"Update the dependencies array to be: [dispatch, staffID]",{"range":"620","text":"621"},"Update the dependencies array to be: [dispatch, isFormOpen]",{"range":"622","text":"623"},"Update the dependencies array to be: [dispatch]",{"range":"624","text":"625"},{"range":"626","text":"625"},{"range":"627","text":"625"},"Update the dependencies array to be: [shouldRemindUser, playSound, smooveTime, dispatch]",{"range":"628","text":"629"},"Wrap the definition of 'handleStartTimer' in its own useCallback() Hook.",{"range":"630","text":"631"},[1737,1747],"[dispatch, staffID]",[767,779],"[dispatch, isFormOpen]",[1054,1056],"[dispatch]",[1700,1702],[1541,1543],[2252,2293],"[shouldRemindUser, playSound, smooveTime, dispatch]",[2958,3566],"useCallback(() =>{\r\n        dispatch(startTimer())\r\n        .then((response)=>{\r\n            // if(response){\r\n            console.log(response , 'from timer body')\r\n            dispatch({type: TIMER_ON})\r\n            setisTimerOff(false)\r\n            startTimerFunc.current.start()\r\n            setInterval(() => {\r\n                handleSync()\r\n            },1000);\r\n            // }else{\r\n            //     console.log(new Error('Error not understand')); // unknown error, rethrow it\r\n            // }\r\n        })\r\n        .catch((error)=>{\r\n            console.log('error from startTimer', error)\r\n        })\r\n    })"]